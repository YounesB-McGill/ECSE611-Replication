    {
      "url": "https://github.com/openstack/puppet-swift",
      "pp_files": [
        "spec/fixtures/manifests/site.pp",
        "manifests/storage/disks.pp",
        "manifests/deps.pp",
        "manifests/storage/xfs.pp",
        "manifests/proxy/kms_keymaster.pp",
        "manifests/test_file.pp",
        "manifests/proxy/cache.pp",
        "manifests/proxy/staticweb.pp",
        "manifests/proxy/s3token.pp",
        "manifests/proxy/swift3.pp",
        "manifests/keystone/auth.pp",
        "manifests/proxy/ceilometer.pp",
        "manifests/bench.pp",
        "manifests/proxy/tempurl.pp",
        "manifests/storage/filter/recon.pp",
        "manifests/proxy/slo.pp",
        "manifests/xfs.pp",
        "manifests/proxy/proxy-logging.pp",
        "examples/multi.pp",
        "manifests/proxy/copy.pp",
        "manifests/storage/device.pp",
        "examples/proxy_keystone.pp",
        "examples/pre.pp",
        "manifests/service.pp",
        "manifests/proxy/catch_errors.pp",
        "manifests/containerreconciler.pp",
        "manifests/proxy/versioned_writes.pp",
        "manifests/proxy/proxy_logging.pp",
        "manifests/proxy/account_quotas.pp",
        "manifests/proxy/bulk.pp",
        "manifests/proxy/container_quotas.pp",
        "manifests/ringserver.pp",
        "manifests/proxy/encryption.pp",
        "manifests/init.pp",
        "manifests/config.pp",
        "manifests/storage/node.pp",
        "manifests/storage/filter/healthcheck.pp",
        "manifests/storage/server.pp",
        "examples/site.pp",
        "manifests/params.pp",
        "manifests/storage/device/account.pp",
        "tests/all.pp",
        "manifests/repo/release.pp",
        "examples/all.pp",
        null,
        "manifests/ringbuilder.pp",
        "manifests/storage/device/container.pp",
        "manifests/storage/all.pp",
        "manifests/proxy/swauth.pp",
        "manifests/storage/generic.pp",
        "manifests/repo/milestone.pp",
        "manifests/storage/object.pp",
        "manifests/proxy/gatekeeper.pp",
        "manifests/proxy/dlo.pp",
        "manifests/storage/disk.pp",
        "manifests/keymaster.pp",
        "manifests/auth_file.pp",
        "manifests/ringbuilder/rebalance.pp",
        "manifests/proxy/tempauth.pp",
        "manifests/proxy/formpost.pp",
        "manifests/ringbuilder/balance.pp",
        "manifests/storage/device/object.pp",
        "manifests/proxy.pp",
        "manifests/storage/loopback.pp",
        "manifests/proxy/authtoken.pp",
        "manifests/objectexpirer.pp",
        "manifests/ringbuilder/create.pp",
        "manifests/proxy/ratelimit.pp",
        "manifests/proxy/crossdomain.pp",
        "manifests/storage/policy.pp",
        "manifests/storage.pp",
        "manifests/storage/generic/upstart.pp",
        "manifests/keystone/dispersion.pp",
        "manifests/storage/ext4.pp",
        "manifests/repo/trunk.pp",
        "manifests/dispersion.pp",
        "tests/site.pp",
        "manifests/storage/account.pp",
        "manifests/storage/container.pp",
        "manifests/storage/mount.pp",
        "manifests/storage/loopbacks.pp",
        "manifests/client.pp",
        "manifests/proxy/s3api.pp",
        "manifests/proxy/keystone.pp",
        "manifests/ringsync.pp",
        "manifests/ringbuilder/policy_ring.pp",
        "manifests/proxy/container_sync.pp",
        "manifests/proxy/tempauth_account.pp",
        "manifests/proxy/healthcheck.pp"
      ],
      "pp_cmtrs": ["zhubingbing", "William Van Hevelingen", "Derek Higgins", "Thiago da Silva", "Thomas Herve", "Juan Antonio Osorio Robles", "Eugene Kirpichov", "Monty Taylor", "Mehdi Abaakouk", "Newptone", "Gerrit Code Review", "Tianshi Li", "ZhongShengping", "Adam Vinsh", "Pradeep Kilambi", "Carlos Camacho", "Sofer Athlan-Guyot", "Thomas Goirand", "Sergio Rubio", "Dan Bode", "Radim Kubacki", "Sebastien Badia", "Matthew Mosesohn", "Mathieu Gagne\u0301", "Alex Schultz", "David Moreau-Simard", "Guilherme Maluf", "Christian Schwede", "Ben Kero", "Chris Ricker", "Elizabeth K. Joseph", "Maksym Yatsenko", "David Moreau Simard", "Sergii Golovatiuk", "Xingchao Yu", "Francesco Vollero", "cbaesema", "Daneyon Hansen", "Lukas Bezdicka", "Marcellin Fom Tchassem", "Matt Fischer", "Drew Fisher", "Iury Gregory Melo Ferreira", "Andrew Woodward", "Mark T. Voelker", "vinsh", "Yanis Guenane", "Ivan Berezovskiy", "Mohammed Naser", "Kyrylo Galanov", "Giulio Fidente", "zhulingjie", "Robert Starmer", "Martin Andr\u00e9", "Emilien Macchi", "Aleksandr Didenko", "Branan Purvine-Riley", "Javier Pena", "Clayton O'Neill", "Adam Morris", "Michal Skalski", "Benedikt von St. Vieth", "Dan Prince", "Marcus Furlong", "Dan", "Fran\u00e7ois Charlier", "newptone", "Cody Herriges", "Gael Chamoulaud", "Rico Lin", "Denis Egorenko", "rabi", "Joe Topjian"],
      "num_pp_commits": 331,
      "num_tot_commits": 836,
      "commits": [{
        "hash": "47d49e7780156175f86a9bec853453649b9c5de1",
        "msg": "Initial commit.\n\nThis initial commit only targets a single node\nswift install on Natty based on 1.4.6",
        "cmtr": "Dan Bode",
        "date": "2012-01-19 18:58:37-08:00",
        "files": [
            "LICENSE",
            "README",
            "Rakefile",
            "TODO",
            "examples/site.pp",
            "files/ringbuilder.sh",
            "files/swift_tester.rb",
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/repo/trunk.pp",
            "manifests/ringbuilder.pp",
            "manifests/ringbuilder/balance.pp",
            "manifests/storage.pp",
            "manifests/storage/device.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/node.pp",
            "manifests/storage/xfs.pp",
            "spec/classes/.swift_storage_spec.rb.swp",
            "spec/classes/swift_storage_spec.rb",
            "spec/spec.opts",
            "spec/spec_helper.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb",
            "templates/proxy-server.conf.erb",
            "templates/rsyncd.conf.erb",
            "templates/swift.conf.erb"]
      },
      {
        "hash": "917426380e88cbd0ef9a4a254017f8c0180cbd95",
        "msg": "Implement ringbuilder\n\nThis commit adds a class, defined resources and\nnative types that can be used together to manage\nthe creation, configuration, and rebalancing of\nrings.\n\nCreates the following native types:\n\n  ring_account_device\n  ring_container_device\n  ring_object_device\n\nThe implementation of these types is provided\nby swift-ring-builder and most of the functionality\nis provided by the parent provider (SwiftRingBuilder)\n\nEach of the providers is hard-coded to find the\nrelevent ring database in /etc/swift. This directory\nlocation can currently not be configured.\n\nEach provider implements self.instances so the\ncurrent state can of the ring can be queried from\npuppet.\n\nThese providers do not handle either the creation\nor the rebalancing of the rings, they are intended\nto be used in combination with defined resource types\nthat perform that functionality:\n\n  swift::ringbuilder::create\n  swift::ringbuilder::rebalance\n\nThe swift::ringbuilder class is also created as\na part of this commit. This class does the following:\n\n  - creates object, account, and container rings\n(it uses the same parameters to create these rings)\n  - creates the rebalance defines\n  - sets up the following relationships:\n    for each ring type, create should be applied before\n    the native types which should refresh the rebalance",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 11:42:42-08:00",
        "files": [
            "lib/puppet/provider/ring_account_device/swift_ring_builder.rb",
            "lib/puppet/provider/ring_container_device/swift_ring_builder.rb",
            "lib/puppet/provider/ring_object_device/swift_ring_builder.rb",
            "lib/puppet/provider/swift_ring_builder.rb",
            "lib/puppet/type/ring_account_device.rb",
            "lib/puppet/type/ring_container_device.rb",
            "lib/puppet/type/ring_object_device.rb",
            "manifests/ringbuilder.pp",
            "manifests/ringbuilder/create.pp",
            "manifests/ringbuilder/rebalance.pp"]
      },
      {
        "hash": "900096f27d4dc4bde2c5db74d556c889fadf7fe9",
        "msg": "Remove comma from last define parameter\n\nThe commit removes the comma trailing the last\nparameter in the swift::storage::mount definition.\n\nThis was causing a parser failure.",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 11:44:11-08:00",
        "files": [
            "manifests/storage/mount.pp"]
      },
      {
        "hash": "ece1d8407f02d57c53c5b57d682b0a1ce085883f",
        "msg": "Refactor of example site.pp\n\nThis commit refactors the previous site.pp example.\n\nAdds ring building types and removes the ringbuilding\nfile.\n\nRemove unnessary comments.\n\nAdds requirement that swift proxy is only configured\nafter the ring is built.",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 11:44:22-08:00",
        "files": [
            "examples/site.pp"]
      },
      {
        "hash": "de50a0923b6f7b118b70c095ae7df2f6ba6db476",
        "msg": "Update misnamed ringbuilder defines\n\nthe defined resource types ringbuilder::create\nand ringbuilder::rebalance were incorrectly\nnamed.\n\nThis commit updates them to the correct names:\n  - swift::ringbuilder::create\n  - swift::ringbuilder::rebalance",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 11:45:18-08:00",
        "files": [
            "manifests/ringbuilder/create.pp",
            "manifests/ringbuilder/rebalance.pp"]
      },
      {
        "hash": "8c13cd147f46f90eeedb2604e57a3c614c3d3f97",
        "msg": "Fix mispelling of container\n\nIn swift::ringbuilder::rebalance there was a typo\nin the $name validation code.\n\nThis commit updates the spelling to be correct.",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 11:45:36-08:00",
        "files": [
            "manifests/ringbuilder/rebalance.pp"]
      },
      {
        "hash": "4ff3e18f3a338f9667649f52af1057a5099f799b",
        "msg": "Split example manifests into separate files\n\nThis commit splits the example manifest into\nseparate files all and pre and removes the node\ndeclarations",
        "cmtr": "Dan Bode",
        "date": "2012-01-23 13:12:57-08:00",
        "files": [
            "README.markdown",
            "examples/all.pp",
            "examples/pre.pp",
            "None"]
      },
      {
        "hash": "a6fcff35efea5e8bb49b6087fe6b12e6b5412ffa",
        "msg": "Add defines for managing devices and rings\n\nImplements three defines that can be used to manage\nthe three kinds of swift devices:\n\n  - objects\n  - accounts\n  - containers\n\nThese defines wrap swift::storage::device (which\nmanages rsync modules and swift device configuration)\nand add additional resources for managing the\nring device entries.\n\nThe defines accept a parameter called manage_ring\nwhich can be used to specify rather the ringbuilding\nresources should be declared or exported.",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 21:59:50-08:00",
        "files": [
            "manifests/storage/device/account.pp",
            "manifests/storage/device/container.pp",
            "manifests/storage/device/object.pp"]
      },
      {
        "hash": "cea6b846dcbb73f8ae159bbd659196ab9f87bfe1",
        "msg": "Remove Rsync::Server::Module defaults\n\nThis commit consolidates resource defaults into\nthe resource declaration.",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 22:02:50-08:00",
        "files": [
            "manifests/storage/device.pp"]
      },
      {
        "hash": "67d53de23ae1774dbfd47fb275d1e1caca3c8486",
        "msg": "Remove swift::storage::node from loopback define\n\nThis commit removes The swift::storage::node\ndeclaration from the swift::storage::loopback\ndefinition.\n\nThis is done to decouple the code that creates\nand mounts partitions from the code that creates\nswift devices.",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 22:07:28-08:00",
        "files": [
            "manifests/storage/loopback.pp"]
      },
      {
        "hash": "b035a32b42be8f238fa95acc455e9938c8f86904",
        "msg": "Refactor swift::storage::node to use device defines\n\nThis commit updates the node class from using\nSwift::Storage::Device to the individual defines.\n\nThis change was made b/c we could not dyncamically\nset the names of the native types.",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 22:09:31-08:00",
        "files": [
            "manifests/storage/node.pp"]
      },
      {
        "hash": "69ef2c16865bb74b44128e3ffbfc358f1ec0a3ea",
        "msg": "Refactor single node example",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 22:11:08-08:00",
        "files": [
            "examples/all.pp"]
      },
      {
        "hash": "7228c5cd95d2edaaa9df20274a15e01374306b87",
        "msg": "Create multi-node example\n\nIt does not work yet, but its getting closer...",
        "cmtr": "Dan Bode",
        "date": "2012-01-27 22:11:27-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "18d681943e05936b55e36185af9c63e41ee5f01b",
        "msg": "Add inline docs to manifests\n\nThis commit adds some initial inline documentation\nof the manifests.\n\nIt also performs some basic whitespace cleanup.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 15:39:18-08:00",
        "files": [
            "examples/all.pp",
            "examples/pre.pp",
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/ringbuilder.pp",
            "manifests/ringbuilder/create.pp",
            "manifests/ringbuilder/rebalance.pp",
            "manifests/storage.pp"]
      },
      {
        "hash": "ea7973635b3f67de3f0e3a7c56cc740bd5892eb1",
        "msg": "Change swift_local_net_ip address to be a global var\n\nThis commit updates the varialbe swift_local_net_ip\nto make it a global variable.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 15:41:12-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "5bebb8410363844a18c90a110fc7572e3c1246de",
        "msg": "Added code for setting swift_storage_3\n\nPreviously there was not code for role assigment\nof a node called swift_storage_3.\n\nThis commit updates a conditional statement to\nassign a role based on this certname.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 15:42:55-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "3cd7bdf27670c54b5fdda0a934be06df754f419e",
        "msg": "Add role_puppetmaster class\n\nAdd a class that can be used to assign a\npuppetmaster role.\n\nThis code is required b/c storedconfigs is required\nfor the multi-node swift scenario.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 15:43:43-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "310ca91b594f8fb79960a38aee73c077d81b17e5",
        "msg": "Removed swift::storage::device::* defines\n\nPreviously, I had created a define intended to\nwrap the creation of the storage device endpoints\nwith their associated ring configs.\n\nI wound up decided against this for two reasons:\n  - Abtstracting storage endpoints together with\nthe ring configurations can be confusing b/c it\nconflates actions associated with the storage role\nwith actions associated with the ringbuilding role.\n  - Abstracting the ring building hides side effects\nof this manifest from the user (that it will effect\nthe ringbuilder role)\n\nThis pull request does the following:\n\n- removes the swift::storage::device::* defines\n\n- update the following code to use\nswift::storage::device in combination with\nring_*_device\n -- examples/multi\n -- swift::storage::node",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 16:50:41-08:00",
        "files": [
            "examples/multi.pp",
            "None",
            "None",
            "None",
            "manifests/storage/node.pp"]
      },
      {
        "hash": "d062985219ec99bcce9629abaf49ee8b84c4ddef",
        "msg": "Add proxy to apt class\n\nThis commit adds a proxy to the apt class in the\npre config manifest.\n\nThis is because I am using a squid proxy to speed\nup testing in my environment.\n\nI need to expose this as a config option so that\nthe hardcoded address of my app proxy is not\nrequired for anyone to use this.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 16:58:45-08:00",
        "files": [
            "examples/pre.pp"]
      },
      {
        "hash": "cc163db0bbf30f731ba089af41b943fb470c7161",
        "msg": "Add ringbuilder class to swift proxy role\n\nFor now, I am assuing that the swift proxy role\nalso includes the ring building role.\n\nThis commit adds a declaration of the\nswift::ringbuilder class to the swift_proxy_role\nclass.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 17:00:26-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "edd9a6b7d05f10f2fd36cdbe9c77b2fe3497cb4a",
        "msg": "Clean up swift ringbuilder role\n\nThis commit cleans up the multi-node example code\nfor the ringbuilder role.\n\n- adds resource collection code to collect exported\nring balancing resources.\n- fixes a typo in the name.",
        "cmtr": "Dan Bode",
        "date": "2012-02-13 17:02:21-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "c56bc60bfd7f699807964a542ec9a14d7777c52f",
        "msg": "Add custom upstart scripts\n\nIn the current trunk PPA for oneiric (which is what\nI am using for testing), the upstart files seem\nto have a problem where they only will start the\nswift servers if the file:\n  /etc/swift/<server_name>-server\n\nexists. Raised as issue: 931893\nin Launchpad.\n\nThis commit adds puppet code to deploy custom\nupstart scripts that have fixed this issue.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:03:25-08:00",
        "files": [
            "files/swift-account.conf.upstart",
            "files/swift-container.conf.upstart",
            "files/swift-object.conf.upstart",
            "manifests/storage.pp"]
      },
      {
        "hash": "44b1c56d74f97b366a5477dc97a7c712690fd7e2",
        "msg": "Renamed storage::device to storage::server\n\nChanged the name of the defined resource type:\nswift::storage::device to be swift::storage::server.\n\nThis change was made in order to better align with\nthe swift terminology since this define was\nconfiguring a swift component server which has no\ndirect association with a device.\n\nThis commit also makes the swift::storage::server\nthe only place where the swift server template is\nused. This allowed me to assume that the variables\ndevice and bind_port will always be available.\n\nAlso updates declarations of the renamed type to\nuse the correct type name.\n\nRemoves the direct server file config from\nswift::storage, replacing it instead with\ndeclarations of swift::storage::server.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:09:01-08:00",
        "files": [
            "manifests/storage.pp",
            "manifests/storage/node.pp",
            "manifests/storage/server.pp",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "3689cf7a202972158b4972357b91f2568148e3bf",
        "msg": "Use node declarations\n\nUpdates the code to use node declarations instead\nof a case statement. This is done to conform to\nthe rest of the openstack manifest and may be\nreverted at a later date.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:13:35-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "31dc69b98565cc9f75ae1680269c004ae45d9758",
        "msg": "remove puppetmaster node declaration\n\nRemoves the puppetmaster node declaration so that\nthis manifest can be imported from the openstack's\nmanifests/site.pp (so that the openstack project\nand the swift project can use the same node\ndeclarations when swift is added as a submodule to\nthe openstack project)",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:14:23-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "eded81575ccdb54bf917dc1a78877c885be3f691",
        "msg": "Remove swift::storage::device declaration\n\nThis commit removes the declaration of\nswift::storage::device since the servers are now\nbuilt from the swift::storage class declaration.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:16:37-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "6f5cf724e8aa4928fb43bf6f1afb026931095b26",
        "msg": "Update ring exported resources\n\nupdate the ports to be 6000-6002 and ensure that\nthe zone parameter is set from $swift_zone.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:17:43-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "380ab56cc02f951d01b7d5df6827b95fd36c5ee6",
        "msg": "Add ringbuilder role class to proxy role\n\nCleaned up code so that ringbuilder is a role.\n\nAdd this role to the proxy node declaration.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:19:16-08:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "b7a8f0cdeee301d39510f93d9e6d0339bfe38d4b",
        "msg": "Improve inline comments\n\nImprove inline comments so that the example\nmanifests can serve as a documented example.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 14:19:52-08:00",
        "files": [
            "examples/all.pp",
            "examples/multi.pp",
            "examples/pre.pp"]
      },
      {
        "hash": "0955f3cd1c19bdbf853648babd5ae486b0c87506",
        "msg": "Add explicit class params for setting storeage ports\n\nPreviously, all of the ports used by the storage\nclass were hardcoded.\n\nThis commits adds the following class parameters to\nthe swift::storage class to allow for configuration\nof the ports used by a storage server:\n  - object_port\n  - container_port\n  - account_port",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 15:03:49-08:00",
        "files": [
            "manifests/storage.pp"]
      },
      {
        "hash": "e5a31452b0655b2b5e5515cdf4f35a3089372836",
        "msg": "Fix swift::storage device path default\n\nThe default devices path for the storage class\nwas incorrectly set to /srv/nodes.\n\nThis commits updates it to /srv/node so that it is\nconsistent with the rest of manifests in this module.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 15:04:45-08:00",
        "files": [
            "manifests/storage.pp"]
      },
      {
        "hash": "e9dfe0f8e57faf0698ce8a8794535a4e641aea56",
        "msg": "Improve documentation\n\nImproves README and inline docs, comments",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 15:05:35-08:00",
        "files": [
            "README.markdown",
            "examples/multi.pp",
            "manifests/init.pp",
            "manifests/ringbuilder.pp",
            "manifests/storage.pp"]
      },
      {
        "hash": "547a96930e4122165367cd99eb518359312cbb44",
        "msg": "Add repo class for milestone and release\n\nAdd classes that can be used to setup the ppas\nfor installing swift from millestone and release.",
        "cmtr": "Dan Bode",
        "date": "2012-02-14 15:06:07-08:00",
        "files": [
            "manifests/repo/milestone.pp",
            "manifests/repo/release.pp"]
      },
      {
        "hash": "65b6f0a69592e3f214d2c30f42e55b42c36f8e03",
        "msg": "Fix milestone and release ppa config\n\nPreviously, a copy and paste error had resulted\nin 3 definitions of the trunk ppa class.\n\nTwo of those were intended to be swift::repo::trunk\nand swift::repo::release.\n\nThis commit corrects this error.",
        "cmtr": "Dan Bode",
        "date": "2012-02-26 20:54:57-08:00",
        "files": [
            "manifests/repo/milestone.pp",
            "manifests/repo/release.pp",
            "manifests/storage.pp"]
      },
      {
        "hash": "6705d556cfbabbcbc03e67321618c8b06a5ef8ad",
        "msg": "Fix swauth proxy config\n\nPreviously, the package for swauth of the swift\nproxy was being added based on a variable that\nwas never set.\n\nThis commit updates that conditional to use the\ncorrect variable.",
        "cmtr": "Dan Bode",
        "date": "2012-02-26 20:57:51-08:00",
        "files": [
            "manifests/proxy.pp"]
      },
      {
        "hash": "272937ed9c077e779d25734e6aba4668efd1f0f1",
        "msg": "Pass correct mount dir to swift::storage::mount\n\nPreviously, swift::storage::xfs was not passing\nthe correct variable for mnt_base_dir to\nswift::storage::mount. $mount_base_dir was incorrectly\nspecified.\n\nThis commit resolves this mistake and ensures that the correct\nvariable is passed.",
        "cmtr": "Dan Bode",
        "date": "2012-02-26 21:14:12-08:00",
        "files": [
            "manifests/storage/xfs.pp"]
      },
      {
        "hash": "2dbcf740df8886a4ae53e67e4c8fbb0ead65537d",
        "msg": "Add everything needed by travis-ci\n\nThis commit adds all of the config files\nneeded for travisci",
        "cmtr": "Dan Bode",
        "date": "2012-02-27 16:52:49-08:00",
        "files": [
            ".travis.yml",
            "Gemfile",
            "Rakefile",
            "spec/fixtures/manifests/site.pp",
            "spec/fixtures/modules/swift",
            "spec/spec_helper.rb"]
      },
      {
        "hash": "954e6c0357f57822f39a37840dfc5e5b4cf794df",
        "msg": "Remove reference to ssh keys\n\nSwift does not need to have keys. This commit\nremoves the ssh keys.",
        "cmtr": "Dan Bode",
        "date": "2012-03-02 10:35:02-08:00",
        "files": [
            "QUESTIONS",
            "manifests/init.pp"]
      },
      {
        "hash": "5083e19bc4e1193c8cb00a402935c05e3f730e07",
        "msg": "Decouple storage server types from each other\n\nPreviously, all of the storage server types\n(account, container, proxy) were always\nconfigured to be installed on the same node.\n\nIt often makes sense to only have the account and\ncontainer together, and to put the object server on\na different node. (or its possible that other\nconfigurations make sense)\n\nThis commit refactors the swift module so that\neach of the types of nodes can be built\nindependently of each other.",
        "cmtr": "Dan Bode",
        "date": "2012-03-02 20:01:49-08:00",
        "files": [
            "examples/all.pp",
            "examples/multi.pp",
            "manifests/storage.pp",
            "manifests/storage/account.pp",
            "manifests/storage/all.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "0e7cb86dcdfdc619af8cee658cac6c0333f77dde",
        "msg": "Update ring creation defaults\n\nUpdates the defaults to ring creation to use\nreplica of 3 and min part hours of 24.\n\nThese are the defaults recommended by the swift\ndocumentation.",
        "cmtr": "Dan Bode",
        "date": "2012-03-02 20:03:53-08:00",
        "files": [
            "manifests/ringbuilder/create.pp",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/defines/swift_ringbuilder_create_spec.rb"]
      },
      {
        "hash": "c7caf05c36d130ddbb3d18265c09a4bc1f9b2beb",
        "msg": "Make all local net ips required\n\nPreviously, the binding address for all services\nwas set to localhost.\n\nThis is not going to be a commonly used value\nfor production deployments.\n\nThe defaults for address have been removes b/c\nthere isn't really a sensible default. This is\nsomething that the users should have to set.",
        "cmtr": "Dan Bode",
        "date": "2012-03-05 21:56:37-08:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "4752a3d85f25ba4cfd38ca2bf374deab673b3bbc",
        "msg": "Decouple memcached configuration from proxy\n\nIt is possible that the memcache server(s) may\nreside on different machines than the swift\nproxy.\n\nThis commit decouples the configurations of the\ntwo services.",
        "cmtr": "Dan Bode",
        "date": "2012-03-05 21:57:10-08:00",
        "files": [
            "manifests/proxy.pp",
            "spec/classes/swift_proxy_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "900e061a1115981ed1f7c954dee8183b0f597055",
        "msg": "Add inline commments\n\nCleans up old inline comments and adds new comments.",
        "cmtr": "Dan Bode",
        "date": "2012-03-05 21:57:10-08:00",
        "files": [
            "manifests/ringbuilder.pp",
            "spec/defines/swift_storage_loopback_spec.rb",
            "spec/defines/swift_storage_mount_spec.rb",
            "spec/defines/swift_storage_node_spec.rb"]
      },
      {
        "hash": "a9cafd8dcdcfd3ba3026f7f286cbdacf73210fa6",
        "msg": "Supply missing required param to all in one example\n\nThis commit adds the parameter proxy_local_net_ip to\nthe swift::proxy class for the all in one example.\n\nThis parameter had been changed to be required in a previous commit,\nbut the example had not been updated.",
        "cmtr": "Dan Bode",
        "date": "2012-03-11 23:29:43-07:00",
        "files": [
            "examples/all.pp"]
      },
      {
        "hash": "6a8318535a0a6441c9f8180b57b7e8c50003d817",
        "msg": "Add local net ip to swift proxy for multi\n\nThis commit adds the now required parameter local_net_ip\nto the declarations of swift proxy.",
        "cmtr": "Dan Bode",
        "date": "2012-03-12 20:07:25-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "c416f209868fb1ab329f58ef1a9c3df5410433b1",
        "msg": "update mispellings of local_net_ip",
        "cmtr": "Dan Bode",
        "date": "2012-03-12 21:14:01-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "b05fe0bb0ba04afc07c4a4578ee085a8ef9c41cf",
        "msg": "update ip address to use eth0\n\nThis commit updates the ip address from eth1 to\neth0.\n\nThis is done for testing in ec2 where there is no\ndefined eth1.",
        "cmtr": "Dan Bode",
        "date": "2012-03-12 21:15:33-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "66b723585649cf98424eafb1d7d96a1b0a20196d",
        "msg": "Only fix upstart scripts on Ubuntu.\n\nensure that the upstart patches are only\nmanaged on Ubuntu instances.",
        "cmtr": "Dan Bode",
        "date": "2012-03-13 12:14:33-07:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/generic.pp"]
      },
      {
        "hash": "6f9e108695dbc0012c2c6ec127ea83aba7348789",
        "msg": "Use xinetd for rsync\n\nPreviously, using the rsync sevices on Ubuntu\ndid not actually work.\n\nAfter reading the init script, I decided that it\nis annoyingly different from Redhat's implementation\nso I have chosen to use xinetd to make the module more\nconsistent between the distros.",
        "cmtr": "Dan Bode",
        "date": "2012-03-13 14:49:28-07:00",
        "files": [
            "manifests/storage.pp"]
      },
      {
        "hash": "cb233bd6a17976654dc766587da5cfe43aea733b",
        "msg": "Remove rsync service mentions\n\nSince rsync is now managed by xinetd, it is\nnecessary to remove the references to the rsync\nservice.\n\nThis was previously causing catalog compilation failures.\n\nAlso updates travisci and the unit tests",
        "cmtr": "Dan Bode",
        "date": "2012-03-13 16:06:51-07:00",
        "files": [
            "manifests/storage/generic.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "6fed9719eda82e30a54c8f379aea2850af660f6d",
        "msg": "Add code for ring syncing\n\nThis commit adds puppet code to handle syncing of the ring\ndatabases.\n\nThe class swift::ringserver is used to set up an rsync server\nthat serve out the ring databases.\n\nThe define swift::ringsync is used to rsync these ring databases\nto the other hosts.",
        "cmtr": "Dan",
        "date": "2012-03-14 05:45:17+00:00",
        "files": [
            "manifests/ringserver.pp",
            "manifests/ringsync.pp"]
      },
      {
        "hash": "cf34ab0522d7630e70a1a09796b065944f9110ab",
        "msg": "Add ring syncing to the multi node example\n\nThis commit adds an example of how to sync rings between\nnodes.\n\nThe ringbuilder role exports resources representing the ring\ndatabases that need to be synced.\n\nThe storage node can then just collect these resources",
        "cmtr": "Dan",
        "date": "2012-03-14 05:47:55+00:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "a11c1af72657b6fa272ea4837a3579f2fa8c4b30",
        "msg": "Update memcache bind address to localhost\n\nSo that it can be accessed by the swift proxy\nfrom this address.\n\nPreviously, it was binding to eth0 and swift proxy\nwas trying to access it via localhost.",
        "cmtr": "Dan Bode",
        "date": "2012-03-14 11:43:44-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "94fb333ab9203ea9b89d9873cb15f2afcd728a98",
        "msg": "Move generic::upstart to its own file\n\nI am not so sure that having multiple resource\ntypes in the same file is supported as of 2.7.11\n\nI am refactoring this code so that the upstart define\nresides in its own file according to our standards.",
        "cmtr": "Dan Bode",
        "date": "2012-03-17 01:42:15-07:00",
        "files": [
            "manifests/storage/generic.pp",
            "manifests/storage/generic/upstart.pp"]
      },
      {
        "hash": "cd33a745c5daf0d76c9db1bfc92fd562baad949d",
        "msg": "Add fedora support\n\nThis commit adds support for fedora.\n\nIt introduces a params namespace class\nto hold data differences between ubuntu and fedora.\n\nIt also moves the xfs packages into their own class (swift::xfs)",
        "cmtr": "Dan Bode",
        "date": "2012-03-20 12:55:34-07:00",
        "files": [
            "TODO",
            "ext/swift.rb",
            "manifests/init.pp",
            "manifests/params.pp",
            "manifests/proxy.pp",
            "manifests/storage.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/xfs.pp",
            "manifests/xfs.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "5377fbc2f2f035eb5e0236ddea7c3a961a657d67",
        "msg": "Get service_provider from params file",
        "cmtr": "Derek Higgins",
        "date": "2012-03-21 15:58:15+00:00",
        "files": [
            "manifests/storage/generic.pp"]
      },
      {
        "hash": "12275e41abd54d5f4bfdacda7b59f1412c1daed1",
        "msg": "Add swift trunk ppa\n\nSo that I can start testing trunk",
        "cmtr": "Dan Bode",
        "date": "2012-03-22 23:06:22-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "abc89b899af0f0185203423818218f91318a2929",
        "msg": "change port 6010 to 6040 due to a conflict in vagrant",
        "cmtr": "François Charlier",
        "date": "2012-03-29 19:41:18+02:00",
        "files": [
            "examples/all.pp"]
      },
      {
        "hash": "dba28ed0a643137e611898c99b46bd3dd0009864",
        "msg": "Enable other providers than upstart",
        "cmtr": "François Charlier",
        "date": "2012-03-29 19:48:44+02:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "2474649cb868396f10fb63bcfe4395ed01588107",
        "msg": "Enforce some dependencies\n\nThings were not executed in the right order with the examples/all.pp",
        "cmtr": "François Charlier",
        "date": "2012-03-29 19:48:44+02:00",
        "files": [
            "manifests/storage/generic.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "c07615d55756abda23645033f9914b47909995d3",
        "msg": "Remove patched upstart scripts\n\nI was using older versions of the Ubuntu packages\nthat shipped with broken upstart scripts.\n\nI am removing these patches now that I am using packages\nthat work.\n\nAlso updates the spec tests to account for the changes.",
        "cmtr": "Dan Bode",
        "date": "2012-04-06 09:42:48-07:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/generic.pp",
            "None",
            "spec/classes/swift_proxy_spec.rb"]
      },
      {
        "hash": "0cbd9597611f33e5755a3609b33f75efcb81d527",
        "msg": "Upsate trunk for use Ubuntu latest packages",
        "cmtr": "Dan Bode",
        "date": "2012-04-06 10:19:29-07:00",
        "files": [
            "manifests/repo/trunk.pp"]
      },
      {
        "hash": "f802df8e5aea46685ba5d7a97b7b31f18aafeae7",
        "msg": "Fix dep issue in swift\n\nThe service should definitely not start before\nits related package is installed.\n\nAnd now it doesn't!",
        "cmtr": "Dan Bode",
        "date": "2012-04-06 10:55:07-07:00",
        "files": [
            "manifests/storage/generic.pp"]
      },
      {
        "hash": "184118716438392a326d8c35a8a548ec87e38d3f",
        "msg": "Replace ppa code\n\nUse ppas from keystone",
        "cmtr": "Dan Bode",
        "date": "2012-04-10 21:35:15-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "59afc07d3bfd677dbdb716a7cecbe4985c9cbf4b",
        "msg": "Refactor of swift server configs\n\nThis commit performs a refactor of the\nswift::storage::config to use fragments.\n\nUpdates server templates\n  - makes workers,user, and mount_checks configurable\n  - adds a default for concurrency\n  - makes the pipeline configurable\n  - remove vm_test_mode flag\n\nUpdates swift::storage::server to use fragments for\nthe config file.\n\nThis has been refactored to allow the end user a\ngreater level of flexibility over how they can\nconfigure custom plugins for swift.\n\nAlso adds additional class params: pipeline,\nmount_check, user, workers, concurrency.\n\nUpdate the unit tests for swift::storage:server",
        "cmtr": "Dan Bode",
        "date": "2012-04-21 12:54:17-07:00",
        "files": [
            ".gitignore",
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb",
            "spec/spec_helper.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "84d59985fc428cc21646f7c3d15b414c95cf6242",
        "msg": "Remove ppa config\n\nThis commit removes the config for setting up\nthe custom ppas. The ppas referenced here have\nbeen deprecated.",
        "cmtr": "Dan Bode",
        "date": "2012-04-21 12:55:51-07:00",
        "files": [
            "None",
            "None",
            "None",
            "None"]
      },
      {
        "hash": "24a01d1bea6a8f05cda04e8c4f47f6daec9cb021",
        "msg": "Implement proxy pipline into fragments\n\nThe swift pipeline is commonly used to plug\ncapabilities in.\n\nThis pipeline should be implemented in a way that\nis easier to extend as people desire additional\npipelines.\n\nThis commit implements classes that can be used\nto configure the following pipelines:\n  - proxy::cache\n  - proxy::healthcheck\n  - proxy::keystone\n  - proxy::swauth\n\nIt also reimplements swift::proxy to utilize those\npipelines for configuration.",
        "cmtr": "Dan Bode",
        "date": "2012-04-22 12:11:27-07:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/proxy/cache.pp",
            "manifests/proxy/healthcheck.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/swauth.pp",
            "manifests/proxy/tempauth.pp",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "templates/proxy-server.conf.erb",
            "templates/proxy/cache.conf.erb",
            "templates/proxy/healthcheck.conf.erb",
            "templates/proxy/keystone.conf.erb",
            "templates/proxy/swauth.conf.erb",
            "templates/proxy/tempauth.conf.erb"]
      },
      {
        "hash": "993ed67fd291d24373c843633e5b200fddbbfeb9",
        "msg": "Remove inheritance\n\nPart of a code wide refactor to remove unnessary\ninheritance.",
        "cmtr": "Dan Bode",
        "date": "2012-04-22 12:12:53-07:00",
        "files": [
            "manifests/storage.pp",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "8fd3d194314d20caaa8e6ffb65f5f2ab3972fc90",
        "msg": "Update examples to use explicit pipelines\n\nThis updates the examples file to work with the\nchanges to swift::proxy.",
        "cmtr": "Dan Bode",
        "date": "2012-04-22 13:26:46-07:00",
        "files": [
            "examples/all.pp",
            "examples/multi.pp"]
      },
      {
        "hash": "4a750768cbc6d641bde7ddf249b09e6c89e7a906",
        "msg": "Update example file\n\nUpdate example\n\n- Add more comments\n- Remove ppa resources",
        "cmtr": "Dan Bode",
        "date": "2012-04-22 23:34:06-07:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "bfa4904234eba5f72994eff794ec8bd4efa92928",
        "msg": "Remove some trailing commas",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-05-08 16:06:59-07:00",
        "files": [
            "manifests/proxy/cache.pp",
            "manifests/proxy/swauth.pp"]
      },
      {
        "hash": "b394c6df19b60d53cfa2c50cfe75c7b7b78a8348",
        "msg": "Fix the rsync modules names\n\nThe rsync module name must be only ```$type``` as written in the\ndocumentation [1].\n\nThe names with the port added exists but is intended to be used only in\nSAIO mode [2] and is only supported if the ```vm_test_mode``` option is\nset in ```swift.conf```.\n\nThe effect of these shares not being named correctly is seen in the\n```swift-{object,account,container}-replicator``` daemons (replication\nfails).\n\n[1] http://swift.openstack.org/1.4.6/howto_installmultinode.html#configure-the-storage-nodes\n[2] http://swift.openstack.org/1.4.6/development_saio.html",
        "cmtr": "François Charlier",
        "date": "2012-05-22 17:27:34+02:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "9514dd250a8c4f0b524ff5fa78c5cf16a629f535",
        "msg": "Ensure the replicator services are started",
        "cmtr": "François Charlier",
        "date": "2012-05-23 17:16:58+02:00",
        "files": [
            "manifests/params.pp",
            "manifests/storage/generic.pp",
            "spec/classes/swift_storage_all_spec.rb"]
      },
      {
        "hash": "03c805e1b8748922bcb1e6f37f91b6a2c36983dd",
        "msg": "Update example for Swift::Ringsync\n\nThe ring files should be rsync'ed then the services should be started\n(or checked)",
        "cmtr": "François Charlier",
        "date": "2012-05-23 21:27:19+02:00",
        "files": [
            "examples/multi.pp"]
      },
      {
        "hash": "ad081d901bce143023c7dee5af1979b1612c463d",
        "msg": "Implement creation of user & endpoints for swift",
        "cmtr": "Dan Bode",
        "date": "2012-05-29 10:40:34-07:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "22d2f6128930a7d59b4b5599ead55a9ad0efb98b",
        "msg": "Add swift-dispersion configuration\n\n* Add config file for swift-dispersion-populate & swift-dispersion-report\n* Add creation of keystone user for swift-dispersion",
        "cmtr": "François Charlier",
        "date": "2012-06-04 21:46:18+02:00",
        "files": [
            "manifests/dispersion.pp",
            "manifests/keystone/dispersion.pp",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_keystone_dispersion_spec.rb",
            "templates/dispersion.conf.erb"]
      },
      {
        "hash": "8c45b3920481b2ab7335fb7289c9180a0abedd28",
        "msg": "Add doc for dispersion",
        "cmtr": "François Charlier",
        "date": "2012-06-04 21:46:18+02:00",
        "files": [
            "manifests/dispersion.pp",
            "manifests/keystone/dispersion.pp"]
      },
      {
        "hash": "01ecb029cd1a0c7f5306f3a7fb135cb6c23b908c",
        "msg": "Implement individual server pipelines\n\nThis commit adds the ability to specify\nindividual pipelines per storage server.\n\nThis allows users to specify their own custom\npipelines to determine how they implement the\nmiddlewares for their storage instances.",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:47:31-07:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "18365a7c43b730fecd584a58d6ebdb35ec0241b7",
        "msg": "Reimplement concurrency to be per process\n\nPreviously, concurrently was implemented per\nstorage server type as a global setting.\n\nThis commit reimplements concurrency to make it\nper process (replicator/updater/reaper)\n\nThis is intended to allow the end user more\nflexibility over how they implement their\nswift cluster.",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:47:43-07:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "d831ec1c45b61f499057a6a40516b74213ddafad",
        "msg": "Reimplement keystone pipeline\n\nThis commit removes the keystone::client::authtoken\nclass from the swift::proxy::keystone class.\n\nThis has been done to  map the classes more cleanly\nto the pipeline specication.",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:47:48-07:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/keystone.pp"]
      },
      {
        "hash": "caad4e3732e7bee625e74dfedaccf5d9887fa410",
        "msg": "Implement additional proxy middlewares\n\nThis commit implements additional proxy middlewares\n  - catch_errors - handles errors\n  - ratelimit    - limits incoming requests\n  - s3token - misddleware for s3auth\n  - swift3 - implement swift APIs\n\nThese middlewares needed to be modeled b/c they\nare configurable interfaces that needed to be\nconfigurable via Puppet.",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:47:52-07:00",
        "files": [
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "templates/proxy/catch_errors.conf.erb",
            "templates/proxy/ratelimit.conf.erb",
            "templates/proxy/s3token.conf.erb",
            "templates/proxy/swift3.conf.erb"]
      },
      {
        "hash": "a3d1b08e960530798fc1b0919af62dc05541fe05",
        "msg": "Expand supported storage middlewares\n\nThis commit expands the supported storage\nmiddlewares to include:\n  - healthcheck - used to be able to perform\nhealthchecks on a storage node\n  - recon",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:47:57-07:00",
        "files": [
            "manifests/storage/filter/healthcheck.pp",
            "manifests/storage/filter/recon.pp",
            "spec/defines/swift_storage_filter_healthcheck_spec.rb",
            "spec/defines/swift_storage_filter_recon_spec.rb",
            "templates/recon.conf.erb"]
      },
      {
        "hash": "478c4b994adbfd7f3c0ab4ce39dbad65988c3bb1",
        "msg": "Update swift proxy example\n\nThis commit adds a usage example of creating\na swift proxy with keystone as the auth middleware\nand a large number of configured middlewares.\n\nThis example encapsulates the latest and greatest\ndeployment example of swift proxy.",
        "cmtr": "Dan Bode",
        "date": "2012-06-04 13:48:01-07:00",
        "files": [
            "examples/proxy_keystone.pp"]
      },
      {
        "hash": "2bdc710d66e051471c3409ec073536d918d7e8a6",
        "msg": "Add note concerning keystone auth and swift-dispersion tools",
        "cmtr": "François Charlier",
        "date": "2012-06-05 15:44:23+02:00",
        "files": [
            "manifests/dispersion.pp"]
      },
      {
        "hash": "09f726c3634a3828aafa492e4914cd6da3835217",
        "msg": "Allow multiple devices per endpoint.\n\nPreviously, the Puppet modules only supported a single device per\nendpoint.\n\nThis commits allows multiple devices per endpoint by making the device\nname a part of the namevar for the swift ring devices.\n\nit also updates the relevent configs.",
        "cmtr": "Dan Bode",
        "date": "2012-06-05 16:45:47-07:00",
        "files": [
            "examples/multi.pp",
            "lib/puppet/provider/swift_ring_builder.rb",
            "lib/puppet/type/ring_account_device.rb",
            "lib/puppet/type/ring_container_device.rb",
            "lib/puppet/type/ring_object_device.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/unit/puppet/provider/swift_ring_builder_spec.rb",
            "spec/unit/puppet/type/ring_account_device_spec.rb",
            "spec/unit/puppet/type/ring_container_device_spec.rb",
            "spec/unit/puppet/type/ring_object_device_spec.rb"]
      },
      {
        "hash": "75889ab7fcf214238da4c73d7bfe328251c79182",
        "msg": "Add example site.pp\n\nThis commit adds an example manifest that can be used\nto deploy a reasonable multi-node swift environment.\n\nIt also removes a few example files that have been\nreplaced by site.pp",
        "cmtr": "Dan Bode",
        "date": "2012-06-12 19:14:18-07:00",
        "files": [
            "examples/all.pp",
            "None",
            "None",
            "None",
            "examples/site.pp"]
      },
      {
        "hash": "6b0b2dedafcce25986c0e76724cc68f39fce3edc",
        "msg": "Make sure the replicator services are ordered properly",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-06-14 11:31:53-07:00",
        "files": [
            "manifests/storage/generic.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "c759ab69fe0c043ffd48bf6c8e8ede6fbacbf354",
        "msg": "Fix ring_*_device usage in swift::storage::node",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-06-14 11:32:22-07:00",
        "files": [
            "manifests/storage/node.pp"]
      },
      {
        "hash": "02efd7afe06f029edee3bfcc6395857e1459b3ec",
        "msg": "Allow multiple instances of swift::storage::server on one host\n\nAdding the server instance's name to the rsync type avoids a duplicate resource\nerror.",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-06-14 11:57:58-07:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "a5788bae83ffcdb9279bb5f312d28b39ad6fa914",
        "msg": "Disable 'use chroot' for rsync::server\n\nAllow to keep the right username/groupname for rsync'ed files if the\nuids and gids are not in sync on all the servers",
        "cmtr": "François Charlier",
        "date": "2012-06-19 16:16:24+02:00",
        "files": [
            "manifests/ringserver.pp",
            "manifests/storage.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_spec.rb"]
      },
      {
        "hash": "18417713553995abe9cc76c3e1c211d5a08a3fe5",
        "msg": "updated loopback, xfs, and mount to support non-loopback devices",
        "cmtr": "Robert Starmer",
        "date": "2012-06-26 16:24:06-07:00",
        "files": [
            "manifests/storage/.mount.pp.swp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/xfs.pp"]
      },
      {
        "hash": "12b8159941ede46cd3f948b744917eb9d882a22d",
        "msg": "Revert \"Allow multiple instances of swift::storage::server on one host\"\n\nThis reverts commit 02efd7afe06f029edee3bfcc6395857e1459b3ec.",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-07-06 14:43:52-07:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "337e7f83ab84a68f2a8e8d3297fcfe794c58aaf0",
        "msg": "Use a single replica in the all-in-one example\n\nUsing multiple replicas for all-in-one requires special swift\nconfiguration that is incompatible with multi-host swift setups.",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-07-06 15:22:51-07:00",
        "files": [
            "examples/all.pp"]
      },
      {
        "hash": "eb02382140d908cab457941b05fb5e24d530f8f6",
        "msg": "Remove trailing comma for puppet 2.6 compat",
        "cmtr": "Branan Purvine-Riley",
        "date": "2012-07-10 11:10:10-07:00",
        "files": [
            "manifests/proxy/authtoken.pp"]
      },
      {
        "hash": "bb85c667cc2a7029dfb6c0f270260473327b64b5",
        "msg": "Style related updates\n\nThis commit contains several style related updates:\n- aligns class parameters for readibility\n- removes trailing class params for 2.6.x compat\n- deletes accidentally checked in swp file",
        "cmtr": "Dan Bode",
        "date": "2012-07-23 16:32:24-07:00",
        "files": [
            "manifests/storage/.mount.pp.swp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/xfs.pp"]
      },
      {
        "hash": "90c666326d6c488d90b8b877497a9848da163932",
        "msg": "Update node blocks to use regex\n\nThis commit updates node blocks to use regex.\n\nThis is so that I can actually use it for my testing.",
        "cmtr": "Dan Bode",
        "date": "2012-07-23 20:14:21-07:00",
        "files": [
            "examples/site.pp"]
      },
      {
        "hash": "8524d615e70db59bf94f5749728b7bc64c3b1339",
        "msg": "Added manifest to generate swiftrc file",
        "cmtr": "Joe Topjian",
        "date": "2012-08-21 02:02:56+00:00",
        "files": [
            "manifests/auth_file.pp"]
      },
      {
        "hash": "88c4954f0bf1e734db382e91aca67b9e5b82ffc9",
        "msg": "Starting the swift replicator with /usr/bin/swift-init on RedHat\n\nShould be changed back to init script when one becomes part of the\npackage. Includes test to ensure original functionality hasn't\nchanged on Ubuntu",
        "cmtr": "Derek Higgins",
        "date": "2012-08-22 12:34:19+01:00",
        "files": [
            "manifests/storage/generic.pp",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "7034190780838cc1f3fe7303759f99d52e988547",
        "msg": "Adding support for ext4 devices\n\nXFS may not be available on all systems",
        "cmtr": "Derek Higgins",
        "date": "2012-08-23 00:47:12+01:00",
        "files": [
            ".fixtures.yml",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "spec/defines/swift_storage_mount_spec.rb"]
      },
      {
        "hash": "403a88a05f4327390bf5796657ce2ca9cfca7980",
        "msg": "Manage missing Swift storage server services\n\nBefore this fix the following services where missing:\n\n    root@swift-storage-01:~# swift-init status all|grep ^No\n    No container-updater running\n    No account-auditor running\n    No object-auditor running\n    No object-expirer running\n    No container-auditor running\n    No account-reaper running\n    No container-sync running\n    No object-updater running\n\nAfter this commit:\n\n    root@swift-storage-01:/etc/init# swift-init status all|grep ^No\n    No proxy-server running\n    No object-expirer running\n\nIt's OK for the proxy-server to be stopped since it's a storage\n.\nYou only need to manage one object-expirer per cluster, so this not\n\nplace to manage it either. See:\n\nhttp://docs.openstack.org/developer/swift/overview_expiring_objects.html",
        "cmtr": "Sergio Rubio",
        "date": "2012-09-20 11:10:18+02:00",
        "files": [
            "files/swift-container-sync.conf.upstart",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "5d68f7e260fd710c99cc4fcc30bbe25a9ea51323",
        "msg": "Prevent some race conditions by requiring the storage server package",
        "cmtr": "Sergio Rubio",
        "date": "2012-09-24 15:22:16+02:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "0a630c3c9eceba2f0a56f6e8e6e6c3bbf7666d4e",
        "msg": "swift::storage::xfs improvements\n\n* Create $mnt_base_dir if dir does not exist (useful when not using\n* loopback)\n* use 'xfs_admin -l' to check for an existing XFS instead of using\n* refreshonly\n* device param now defaults to '' for compat reasons since we'll be\n  using '/dev/' + resource title when no device is specified\n* use -f flag with mkfs.xfs so we can format RAW unpartitioned devices\n* Does not break interface compatibility, tests OK",
        "cmtr": "Sergio Rubio",
        "date": "2012-09-26 18:37:11+02:00",
        "files": [
            "manifests/storage/xfs.pp",
            "spec/defines/swift_storage_xfs_spec.rb"]
      },
      {
        "hash": "f61af02d035dd52656778cbda05415542d7538ed",
        "msg": "Add mount_check param to swift::storage::all (defaults to false)",
        "cmtr": "Sergio Rubio",
        "date": "2012-09-26 19:13:23+02:00",
        "files": [
            "manifests/storage/all.pp"]
      },
      {
        "hash": "2bb6be25bd1b9740ce8dc29991560d5c0b41fdf8",
        "msg": "Create /var/cache/swift directory\n\nDefault directory for middleware like Swift-recon",
        "cmtr": "Sergio Rubio",
        "date": "2012-10-02 11:13:45+02:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "87ab008565303cf813e4b21ad9da036a43fb144c",
        "msg": "Region changes",
        "cmtr": "Joe Topjian",
        "date": "2012-11-01 17:48:12-06:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "020b7723cbbe75fbcae89514a1e1882ae807fb27",
        "msg": "Several changes:\n* `python-swiftclient` is now installed by default.\n* Fixed swift3.\n* Fixed s3token.\n* Recreated authtoken - it used to be configured in the Keystone module.\n* Created proxy-logging filter",
        "cmtr": "Joe Topjian",
        "date": "2012-11-01 17:48:12-06:00",
        "files": [
            "manifests/init.pp",
            "manifests/keystone/auth.pp",
            "manifests/params.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/proxy-logging.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp",
            "templates/proxy/authtoken.conf.erb",
            "templates/proxy/proxy-logging.conf.erb",
            "templates/proxy/swift3.conf.erb"]
      },
      {
        "hash": "d5859165654fc673e02902383c17281584349e51",
        "msg": "Added logging support to proxy-server",
        "cmtr": "Joe Topjian",
        "date": "2012-11-01 17:48:12-06:00",
        "files": [
            "manifests/proxy.pp",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "9dc035558c85031e2f3c910f0fe6ec5f1178b65f",
        "msg": "Adding the swift client package name to params.pp for RedHat",
        "cmtr": "Derek Higgins",
        "date": "2012-11-06 06:52:57-05:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "995ec33b13374e4bb2fcf85706103ea0373b340a",
        "msg": "Fixed tests",
        "cmtr": "Derek Higgins",
        "date": "2012-11-15 11:46:05+00:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "spec/classes/swift_keystone_auth_spec.rb",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb"]
      },
      {
        "hash": "3ac424cc4200fee42622a1c0a4dbe544b10ea365",
        "msg": "Add some middlewares (tempurl, staticweb, formpost)",
        "cmtr": "Mehdi Abaakouk",
        "date": "2012-11-16 19:16:08+01:00",
        "files": [
            "manifests/proxy/formpost.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/tempurl.pp",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "templates/proxy/formpost.conf.erb",
            "templates/proxy/staticweb.conf.erb",
            "templates/proxy/tempurl.conf.erb"]
      },
      {
        "hash": "b885ed74885957fbac8ef47567e870b9ec02f28c",
        "msg": "Update swift::keystone::dispersion\n\n• Use the new keystone_user & keystone_user_role parameters\n• Add email & tenant parameters",
        "cmtr": "François Charlier",
        "date": "2012-11-21 20:15:53+01:00",
        "files": [
            "manifests/keystone/dispersion.pp",
            "spec/classes/swift_keystone_dispersion_spec.rb"]
      },
      {
        "hash": "9cc14a9042cb5b6e8385406451ae9c079930e321",
        "msg": "Adding the ability to specify https for the public endpoint",
        "cmtr": "Derek Higgins",
        "date": "2012-11-21 23:01:46+00:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "ec0d743e0145a006f1638df2a2c3c9131fb75f7d",
        "msg": "Fix syntax error in s3token manifest\n\n[9506][rubiojr.napoleon] puppet parser validate manifests/proxy/s3token.pp\nError: Could not parse for environment production: Syntax error at\n'auth_host'; expected ')' at\n/home/rubiojr/Work/github/puppetlabs-swift/manifests/proxy/s3token.pp:25\nError: Try 'puppet help parser validate' for usage",
        "cmtr": "Sergio Rubio",
        "date": "2012-11-22 18:35:28+01:00",
        "files": [
            "manifests/proxy/s3token.pp"]
      },
      {
        "hash": "31aa020b0fbfe98772c4271d58ee9e4a62a2166e",
        "msg": "Avoid duplicate package swift.\n\nA duplicate can appear if installed on the same node with\nopenstack::glance with glance_backend=swift, which also installs\nthis package for client utilities and libraries.",
        "cmtr": "Eugene Kirpichov",
        "date": "2012-11-30 19:37:44+04:00",
        "files": [
            "manifests/init.pp"]
      },
      {
        "hash": "52753b950812bb9bdcfd7354a7f9609447266ab9",
        "msg": "Create swift user and home directory",
        "cmtr": "Eugene Kirpichov",
        "date": "2012-11-30 19:44:17+04:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "d1fd4084afd89b7d8102633ab60510056ce95b9b",
        "msg": "Fix missing package_ensure in swauth",
        "cmtr": "Eugene Kirpichov",
        "date": "2012-12-04 15:58:01+04:00",
        "files": [
            "manifests/proxy/swauth.pp",
            "spec/classes/swift_proxy_swauth_spec.rb"]
      },
      {
        "hash": "e6ba75a1618c580e48cb9830898194cdbf38c13e",
        "msg": "Setting name of swift3 plugin package\n\nOn Red Hat it should be openstack-swift-plugin-swift3 not swift-plugin-s3",
        "cmtr": "Derek Higgins",
        "date": "2012-12-11 19:00:42-05:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "63cb9e735d971b9336b9361cb4ab0a1fb1913918",
        "msg": "Remove trailing coma for Puppet 2.6 compat.",
        "cmtr": "François Charlier",
        "date": "2012-12-12 10:35:26+01:00",
        "files": [
            "manifests/keystone/dispersion.pp"]
      },
      {
        "hash": "4f77fa42ad33a5096f517d0dcd8f281898a93afb",
        "msg": "Allow to have a different internal port and public port",
        "cmtr": "Mehdi Abaakouk",
        "date": "2012-12-20 11:58:10+01:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "b379804ca98549c74a64cc80c1ebc335d29f73e0",
        "msg": "fix bug setting device\n\nThe device set for the storage mount point was\nhard-coded to /dev/$name. This value is only\nvalid when no device is supplied to the storage\nxfs setup.\n\nThis commit updates it to use the target_device\nwhich is either the device that was passed, or\n/dev/$name if not device is specified.",
        "cmtr": "Dan Bode",
        "date": "2013-01-07 11:07:20-08:00",
        "files": [
            "manifests/storage/xfs.pp",
            "spec/defines/swift_storage_xfs_spec.rb"]
      },
      {
        "hash": "a467efdc46edba5932c12c4eb5924ed1ed39c229",
        "msg": "level up swift test file\n\nimprove the file used to test swift.\n\nconvert into a template.\ncreate a class to configure and deploy it.",
        "cmtr": "Dan Bode",
        "date": "2013-01-11 12:21:16-08:00",
        "files": [
            ".gitignore",
            "manifests/test_file.pp",
            "spec/classes/swift_test_file_spec.rb",
            "templates/swift_keystone_test.erb"]
      },
      {
        "hash": "3d2462bd78d02059cc4d3b82badb9ff8f09f4fed",
        "msg": "add upstart symlink\n\nthe service upstart provider does not\nwork unless the init script is a symlink\nto /lib/init/upstart-job for at least older\nversions of Puppet.\n\nThis commit adds this symlink to avoid\nrun time apply failures.",
        "cmtr": "Dan Bode",
        "date": "2013-01-11 14:47:21-08:00",
        "files": [
            "manifests/storage/container.pp",
            "spec/classes/swift_storage_container_spec.rb"]
      },
      {
        "hash": "56cb7b955db7ed4c55185f621529202870cb18e9",
        "msg": "refactor of keystone examples\n    \nThis commit refactors the keystone examples file so\nthat it is easier to consume from the\nopenstack_dev_env for testing.\n    \nInstead of keeping swift examples in this top level\ntesting project:\n    \n  https://github.com/puppetlabs/puppetlabs-openstack_dev_env\n    \ninstead, it imports the example manifest from this\nmodules:\n\n  # manifests/site.pp\n  import '/etc/puppet/modules-0/swift/examples/site.pp'\n    \nThis is intended to solve two problems:\n1. previously, the example code was ported to\nthis project, this caused the example code that\nships with each module to get out of date (since\ntesting is only performed on the dev_env)\n2. prevents me from having to maintain multiple\nexamples.\n    \nThere are a few things that had to be refactored for\nthis to work:\n        \n1. example needed to be updated to use hiera\n    \nso that the dev_env can override variables and\ncontrol the config of swift through the dev env.\n\n2. keystone role changed to swift-keystone\n\nexample needed to be updated",
        "cmtr": "Dan Bode",
        "date": "2013-01-11 15:25:47-08:00",
        "files": [
            "README.md",
            "examples/site.pp"]
      },
      {
        "hash": "39d1417fbdc443f0c39d051aa37927f1ac8ffdf3",
        "msg": "Removed some non-ascii characters that were causing Puppet to fail to build\nthe proxy.",
        "cmtr": "Adam Morris",
        "date": "2013-01-24 08:27:19-08:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp"]
      },
      {
        "hash": "77c17c7d3fc775eab72d51cf387e3d4804410791",
        "msg": "RHEL/Fedora replicator updates.\n\nThe latest RHEL and Fedora Swift packages now include replicator\ninit scripts.\n\nThis updates the swift module to make use of them.\n\nChange-Id: I6d33aa87ebfda390903762e5a3ab45708db27a5e",
        "cmtr": "Dan Prince",
        "date": "2013-04-05 14:48:03-04:00",
        "files": [
            "manifests/params.pp",
            "manifests/storage/generic.pp"]
      },
      {
        "hash": "b634c440ca92167b0c4c95b66530785354c4d3fb",
        "msg": "Allow customise log_facility in storage server configuration\n\nChange-Id: I4c698b7657dde1d0f1ba6b4043ca9ce992dcdb56",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-04-10 09:54:05+02:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "45edcd61de69e610225a6492634996eee1c3553c",
        "msg": "Ensure python-swiftclient is installed to use swift-dispersion\n\nChange-Id: I03a27989bbcb957227ca2ab1f5c54420b29bb24a",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-04-10 09:56:52+02:00",
        "files": [
            "manifests/dispersion.pp",
            "spec/classes/swift_dispersion_spec.rb"]
      },
      {
        "hash": "e437b44d44c0fb584a7071bfa314be3b4e72f11e",
        "msg": "Allow to have a different internal address and public address\n\nChange-Id: Id87323393a3bfd0ac3c9bc80fa2f46775e102eea",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-04-10 10:03:41+02:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "0dcde3563a54ba33eb20e2a9a1aaa94b3cf05daa",
        "msg": "Fix swift storage service start on debian\n\nSome services only start on ubuntu system,\nso add debian support for that services\n\nChange-Id: I6e050af98fda5e162278130b4e1116402c3d2ae3",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-04-11 08:50:55+02:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "e8a478df5906bbc6158337edc2984c3546820812",
        "msg": "Remove traling / from keystone admin_url endpoint\n\nChange-Id: I567c3dbb4f4e498365074fd64a5f70395c6f7cd7",
        "cmtr": "François Charlier",
        "date": "2013-04-11 16:14:38+02:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "bee081b5b65e5dd7451eb328af6a01f564712da0",
        "msg": "Fix swift_ring_builder output parsing.\n\nUpdates the swift_ring_builder so that it parses ring builder output\nfrom the most recent Swift releases correctly (1.7.6 or greated).\n\nBackward compat for the previous parsing is still supported.\n\nChange-Id: I4263b349310e16f6825960805eb27e4bfe3ff002",
        "cmtr": "Dan Prince",
        "date": "2013-04-11 11:37:38-04:00",
        "files": [
            "lib/puppet/provider/swift_ring_builder.rb",
            "spec/fixtures/manifests/site.pp",
            "spec/unit/puppet/provider/swift_ring_builder_spec.rb"]
      },
      {
        "hash": "9d7ba981d19e8a4e7a1c422be7083053d1040761",
        "msg": "Drop Swift requirement on keystone:python.\n\nI believe this requirement was added to obtain support auth_token\nmiddleware (keystone auth support). This is now provided via\nkeystoneclient.\n\nSince this requirement no longer works we should drop it since\nit is heavyweight to install keystone source code on all the\nswift proxies.\n\nMost packages automatically require keystoneclient as well so\nwe can probably ignore automatically adding this dep in here. I'm open\nto doing that if we thing it worthwhile... but we'll first need to\nmake a keystone::client module to support it.\n\nChange-Id: I2a85ea964d2b9e1a93c3ec0ba8de31b188c140ea",
        "cmtr": "Dan Prince",
        "date": "2013-04-12 08:05:00-04:00",
        "files": [
            "manifests/proxy/keystone.pp",
            "spec/classes/swift_proxy_keystone_spec.rb"]
      },
      {
        "hash": "d384093080bdc31dd18364a0d4f1cf753c2290a4",
        "msg": "Set config_file_path in storage::node.\n\nThis change makes it so that storage::node sets config_file_path\nfor each of the services correctly. Previously this would cause\nswift config file fragments to get written to\n/etc/swift/<service>/600?.conf instead of /etc/swift/<service>.conf.\n\nFixes config issues for me on Fedora when using swift::storage::node.\n\nChange-Id: I8d0ce87a545af805e24c5594b437483f9b479c9d",
        "cmtr": "Dan Prince",
        "date": "2013-04-12 08:05:48-04:00",
        "files": [
            "manifests/storage/node.pp"]
      },
      {
        "hash": "9759682213a6cbb09f2b9fa1db5c61550cd6b22e",
        "msg": "Set hasstatus => true for proxy services\n\nFix bug 1170711\n\nnotifies to proxy services on RHEL were not causing a restart of the service\n\nChange-Id: Ia2c4df9135daa80380c4aec0627605d5afb88386",
        "cmtr": "Derek Higgins",
        "date": "2013-04-19 10:07:46-04:00",
        "files": [
            "manifests/proxy.pp",
            "spec/classes/swift_proxy_spec.rb"]
      },
      {
        "hash": "bdbcf5ca883969a227e3ae3c60a4f0e3b04a04a1",
        "msg": "Fix warnings in storage/server.pp.\n\nUpdates the swift storage/server class so that we quote $pipeline\nbefore doing a comparison check for the server type. This fixes\nan issue where warnings would always get printed when using the\ndefault $pipeline variable.\n\nFixes LP Bug #1171052.\n\nChange-Id: I3076b6110f1a42c0e6c179d18952b0b013908f01",
        "cmtr": "Dan Prince",
        "date": "2013-04-20 22:29:57-04:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "004b8b41488a9658763153a967a1a02bfaa5af8c",
        "msg": "Add address params to the swift::keystone::auth\n\nFix bug 1170194\n\n   This patch contains:\n       * add param admin_address and internal_address\n       * fix tab misusing\n\nChange-Id: Id3865240a3d5d289c557fd8cc51d6f1d77057ed8",
        "cmtr": "newptone",
        "date": "2013-04-24 16:13:04+08:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "90f58f8f925cffc90271ff7a2c3ad733dc051cef",
        "msg": "Start swift support services on Red Hat\n\nNow starting these services on all distros\nswift-account-auditor swift-container-auditor swift-object-auditor\nswift-account-reaper swift-container-updater swift-object-updater\n\nChange-Id: I98cfcef3b43a2bdad6f359e4e4098a6113245353",
        "cmtr": "Derek Higgins",
        "date": "2013-04-24 06:16:59-04:00",
        "files": [
            "manifests/params.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb"]
      },
      {
        "hash": "015be53c81fa59f1ec85d743afbdceea1ad00e0e",
        "msg": "Add the ceilometer middleware\n\nChange-Id: Ibcdaa1218c8d027dc3e4b6d2cd394e9d0af8c6da",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-04-29 10:30:33+02:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "templates/proxy/ceilometer.conf.erb"]
      },
      {
        "hash": "163c7b1abc40d1cd4e0de650365ee003c17f0a90",
        "msg": "Use boolean instead of string\n\nChange-Id: Ieb768a79d6b4fd4f574b71c51e64f828f8d3316b",
        "cmtr": "Mathieu Gagné",
        "date": "2013-05-09 23:21:06-04:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "3e4835f340e27ca59e0992f360715fcbadf0da60",
        "msg": "Remove swift::params include\n\nThis class does not need swift::params. Furthermore,\nswift::params is already provided by parent class swift.\n\nChange-Id: I351331b01f81e224a37c4f5df64aa09d17939605",
        "cmtr": "Mathieu Gagné",
        "date": "2013-05-13 13:50:34-04:00",
        "files": [
            "manifests/proxy/ceilometer.pp"]
      },
      {
        "hash": "ff2c6fc3b94575ae37a763535c24e641d3dd7dc0",
        "msg": "Fix a typo to define Debian's service provider.\n\nPlus, the special case being Ubuntu, set a special service provider on\nUbuntu and keep undef for Debian, which is the way it behaved because of\nthe typo :)\n\nChange-Id: I724ac07c96de6b9242721fb2915805024646c769",
        "cmtr": "François Charlier",
        "date": "2013-05-14 09:39:02+02:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "ead48deedd6af4161e5fdd5550c4f714a44404bc",
        "msg": "Ensure xfsprogs and parted are not already installed\n\nChange-Id: I9c26d9dca2c5e69112776fb033fca8d8660f6179",
        "cmtr": "Mehdi Abaakouk",
        "date": "2013-05-23 12:07:22+02:00",
        "files": [
            "manifests/xfs.pp"]
      },
      {
        "hash": "3a0413f7f521d71be0bed3d64ede62c50ab2151e",
        "msg": "Customizable allowed_sync_hosts in container-server.conf\n\nInsert default value into .conf file (127.0.0.1) or use\ncustom value if specified.\n\nChange-Id: I9caec9657a2a3ad789b7dab646e505f609c25655",
        "cmtr": "Radim Kubacki",
        "date": "2013-05-29 12:39:21+02:00",
        "files": [
            "manifests/storage/container.pp",
            "spec/classes/swift_storage_container_spec.rb",
            "templates/container-server.conf.erb"]
      },
      {
        "hash": "09a78bfd9d28d8b8f32c2a8ada3e7dc1f63f5b79",
        "msg": "Add auth_admin_prefix and custom auth_uri params\n\nauth_admin_prefix allows the prepend of a prefix to the URL used for\nadmin tasks.  See: https://review.openstack.org/#/c/7156/ for\nimplementation in Keystone.\n\nauth_uri allows to specify the public authentication url (Keystone's\npublic endpoint) if it can't be guessed from $auth_host + $auth_protocol\n\nImplements blueprint serve-keystone-from-wsgi\n\nChange-Id: Ic66727f78406d70b5ab5bc07fcc074477df2303c",
        "cmtr": "François Charlier",
        "date": "2013-06-05 20:50:37+02:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "templates/proxy/authtoken.conf.erb"]
      },
      {
        "hash": "b0f48341659fd575f48710d7f429aa9bde81cf90",
        "msg": "Fix dependency problem in class swift\n\nClass swift requires class['ssh::server::install'], otherwise it will\ncomplain and fail to compile the catalog.\n\nChange-Id: Ieeef735cc3e78bb6a6b514c711e5b87a861ee31b",
        "cmtr": "Newptone",
        "date": "2013-06-10 18:32:41+08:00",
        "files": [
            "examples/all.pp",
            "examples/site.pp",
            "manifests/init.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "d339eb4937a66d2e7aa5713baab3f6f97a40299f",
        "msg": "Add swift::storage::disk to support disk device.\n\nIt aim to support to use the disk device as the swift storage backend,\nthis pathch contains:\n    * a new define with three params\n    * annotations and examples for this define\n    * a new spec test\n\nChange-Id: I92f13992a02b9cff0f29bde3266a92f37bf63d13",
        "cmtr": "newptone",
        "date": "2013-06-12 14:14:17+08:00",
        "files": [
            "manifests/storage/disk.pp",
            "spec/defines/swift_storage_disk_spec.rb"]
      },
      {
        "hash": "d945c1f97906c53eb59fe2a4a9279b1e8397eb89",
        "msg": "Prepare repository for a Puppet Forge release\n\n  Commit updates README.md with a consistent template for documentation,\n  removes travis.yml since we're on stackfoge now, updates the\n  Modulefile for release, removes CHANGELOG in favor of summarized release\n  notes in the README that will be viewable on Forge for the new\n  release, and moves examples to tests to adhere to Puppet Labs Style\n  Guide (http://docs.puppetlabs.com/guides/style_guide.html#tests).\n\nChange-Id: Ic7e672eb6240b0acce7384706aa79b430bd2b003",
        "cmtr": "Cody Herriges",
        "date": "2013-06-18 14:41:29-07:00",
        "files": [
            "None",
            "None",
            "Modulefile",
            "None",
            "README.md",
            "tests/all.pp",
            "tests/site.pp"]
      },
      {
        "hash": "45cec2d3fbc6910eb9ffc1470317e515e532aead",
        "msg": "Add swift::bench to manage swift-bench.conf\n\nThis patch adds a conf file swift-bench.conf\nfor swift performance bench, and add a spec\ntest for it.\n\nFixed bug 1188968\n\nChange-Id: Iafb67f116a9403bba96328be7c9c09d21a65a74c",
        "cmtr": "Newptone",
        "date": "2013-07-05 11:50:27+08:00",
        "files": [
            "manifests/bench.pp",
            "spec/classes/swift_bench_spec.rb",
            "templates/swift-bench.conf.erb"]
      },
      {
        "hash": "6a0e505ee957fa25a124b07f62d44069deb8ae10",
        "msg": "Add configurable log for storage server\n\nThis patch add configurable log for swift account/container/object\nserver service.\nPartially implements blueprint puppet-swift-log-support.\n\nChange-Id: Ib3db483dfbad97f23ab7ba2068632856b5e00f11",
        "cmtr": "Gerrit Code Review",
        "date": "2013-07-18 02:33:07+00:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "4d96d896cac155acb87c2fd5e626cdf3585f24a0",
        "msg": "Added the allow_versions flag to enable/disable object versioning in swift object container\n\nChange-Id: Id78be1a8c3dccd550c92204c4aaa1cf32edcbf61",
        "cmtr": "Francesco Vollero",
        "date": "2013-07-19 16:40:13+02:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/container-server.conf.erb"]
      },
      {
        "hash": "b4584daaae829b5627b0996e7296b014110dba2a",
        "msg": "Add configurable log for proxy-server service\n\nThis patch add configurable log for swift proxy-server service.\nAnd add related spec test.\n\nPartially implements blueprint puppet-swift-log-support.\n\nChange-Id: I385093b3e63f8210d83ec125e6d2578b06b631d4",
        "cmtr": "Gerrit Code Review",
        "date": "2013-07-26 04:33:23+00:00",
        "files": [
            "manifests/proxy.pp",
            "spec/classes/swift_proxy_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "178f4b18dc32df9f163a968a6a33270c89a32027",
        "msg": "Various Puppet lint fixes\n\n* Fix following warnings:\n    * double quoted string containing no variables\n    * indentation of => is not properly aligned\n    * mode should be represented as a 4 digit octal value or symbolic mode\n    * string containing only a variable\n    * top-scope variable being used without an explicit namespace\n    * unquoted file mode\n    * variable not enclosed in {}\n* Fix following errors:\n    * trailing whitespace found\n    * two-space soft tabs not used\n* Remove quotes around class in include/require statements\n\nChange-Id: Ia920d848e1955612a6486ec8731309e6d3a70f63",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-02 11:51:57-04:00",
        "files": [
            "manifests/auth_file.pp",
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "manifests/keystone/auth.pp",
            "manifests/params.pp",
            "manifests/proxy.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/formpost.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp",
            "manifests/proxy/tempurl.pp",
            "manifests/ringserver.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/node.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "manifests/test_file.pp",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "tests/all.pp",
            "tests/site.pp"]
      },
      {
        "hash": "f71d159c4d423ff6bb4c5562bec370cab8ab9f9f",
        "msg": "Improve Proxy Signing Directory Support\n\n1. The signing_dir was being created on every swift node\nwhen it's only needed on proxies:\n\n  http://docs.openstack.org/grizzly/openstack-compute/install/apt/content/installing-and-configuring-the-proxy-node.html\n\n2. The signing_dir was not configurable, even though\nthe OpenStack doc's show multiple references\n(/var/cache/swift and /home/swift/keystone-signing).\n\nChange-Id: I3eb00046fc535a32d7a1800d15489e9fe071373b",
        "cmtr": "Daneyon Hansen",
        "date": "2013-08-12 18:39:15+00:00",
        "files": [
            "manifests/init.pp",
            "manifests/proxy/authtoken.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_spec.rb",
            "templates/proxy/authtoken.conf.erb"]
      },
      {
        "hash": "64ff379fad54c8dcc7764a46123d0fd68123820b",
        "msg": "Validate that swift zones are integers.\n\nAs per the docs, zones are numbers starting at 1.\nhttp://docs.openstack.org/developer/swift/deployment_guide.html#preparing-the-ring\n\nChange-Id: I9bcc1616ad266b09ae4be65bf35b31ea0a455af7",
        "cmtr": "William Van Hevelingen",
        "date": "2013-08-13 16:19:04-07:00",
        "files": [
            "manifests/storage/node.pp",
            "spec/defines/swift_storage_node_spec.rb"]
      },
      {
        "hash": "e7bb58e6ba39d7daeee9069c83451f8898d8a424",
        "msg": "Use swift_config\n\nUse swift_config to configure swift.conf\n\nImplements: blueprint puppet-swift-ini-settings\nChange-Id: I3cb4b4f6f5586216e503dfe9b66b5e2e457cc90f",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-25 23:22:05-04:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb",
            "None"]
      },
      {
        "hash": "0098067226a9a1593bba49231eaa96c79aec8a08",
        "msg": "Fix puppet-lint warnings about ensure\n\nFix warning: \"ensure found on line but it's not the first attribute\"\n\nChange-Id: Iecc0cd4fe267c40fbef9a84ff1da2eaff5aa45a7",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-25 23:29:34-04:00",
        "files": [
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/proxy/swift3.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/object.pp",
            "manifests/storage/xfs.pp"]
      },
      {
        "hash": "b8a225c9a08ba6ca6029e82948d993d91025a1a5",
        "msg": "Fix puppet-lint warnings about double quoted string\n\nFix warning: \"double quoted string containing no variables\"\n\nChange-Id: I649bdcf11273de631c0060178776d64e329e2445",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-25 23:37:19-04:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "e2ff7b2a7a9f96d41db40bd775796294698b8f88",
        "msg": "Fix puppet-lint warning about top-scope variable\n\nFix \"top-scope variable being used without an explicit namespace\"\n\nChange-Id: Id397dacd1072e31bfb21d9d0ed60cff1bc57f06e",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-25 23:37:54-04:00",
        "files": [
            "manifests/proxy.pp"]
      },
      {
        "hash": "f10bcda7e6ae35d94ac439e99edcd69644c3291e",
        "msg": "Revert \"Use swift_config\"\n\nThis reverts commit e7bb58e6ba39d7daeee9069c83451f8898d8a424.\n\nFixes LP Bug #1216881.\n\nChange-Id: I65109b8bfeeb2f59971dadbdb14ec47b1fc82a89",
        "cmtr": "Dan Prince",
        "date": "2013-08-26 08:12:07-04:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb",
            "templates/swift.conf.erb"]
      },
      {
        "hash": "c89e327fb8498d5629a637da3c88b5885c05d70a",
        "msg": "Use swift_config to configure swift.conf\n\nThis change also adds an autorequire in the swift_config\ntype to ensure the /etc/swift/swift.conf exists.\n\nChange-Id: Ic591a3ceb040c4599339ed7f750a5273d2052ac1\nImplements: blueprint puppet-swift-ini-settings",
        "cmtr": "Dan Prince",
        "date": "2013-08-26 20:54:06-04:00",
        "files": [
            "lib/puppet/type/swift_config.rb",
            "manifests/init.pp",
            "spec/classes/swift_spec.rb",
            "None"]
      },
      {
        "hash": "0f7601a3587511b633d0a04ffa24f42f19b3786c",
        "msg": "Deprecate classes with hyphens\n\nPuppet does not recommend the use of hyphens in class names.\n\nThis change deprecates classes with hyphens and inform the users\nto use the new ones. Backward compatibility is preserved.\n\nChange-Id: I4991c956e297d76423a805558d9b6731473a4a51",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-28 20:19:14-04:00",
        "files": [
            "manifests/proxy/proxy-logging.pp",
            "manifests/proxy/proxy_logging.pp"]
      },
      {
        "hash": "49d6801247fd3969de89661a0098c109cac1f755",
        "msg": "Use swift_bench_config\n\nUse swift_bench_config to configure swift-bench.conf\n\nImplements: blueprint puppet-swift-ini-settings\nChange-Id: I97a14f0210aa472876188e66249ea53f34afff72",
        "cmtr": "Mathieu Gagné",
        "date": "2013-08-31 01:12:35-04:00",
        "files": [
            "manifests/bench.pp",
            "spec/classes/swift_bench_spec.rb",
            "None"]
      },
      {
        "hash": "ba6abfa6c7c3e97f64752eb0972a21cbfe2c998b",
        "msg": "Use swift_dispersion_config\n\nUse swift_dispersion_config to configure dispersion.conf\n\nImplements: blueprint puppet-swift-ini-settings\nChange-Id: I521eefa88e943858f850727f0e57ca35c6b695f2",
        "cmtr": "Mathieu Gagné",
        "date": "2013-09-04 20:04:44-04:00",
        "files": [
            "manifests/dispersion.pp",
            "spec/classes/swift_dispersion_spec.rb",
            "None"]
      },
      {
        "hash": "23cc3616cea78b8431181af748a1827add18974f",
        "msg": "Fix compatibility with latest puppetlabs-concat\n\nconcat::setup has been made a private class and can no longer be\nincluded from modules outside concat itself.\n\nconcat::setup is already included by the concat define. Removing\nits inclusion from puppet-swift classes shouldn't result in breakage\nor loss of functionality.\n\nChange-Id: I7566e09bd4e93aec719a495279cf92d8a898057e\nCloses-bug: #1245936",
        "cmtr": "Mathieu Gagné",
        "date": "2013-10-29 11:48:48-04:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "spec/defines/swift_storage_filter_healthcheck_spec.rb",
            "spec/defines/swift_storage_filter_recon_spec.rb"]
      },
      {
        "hash": "e2e39f0edee69874818118a2e2c6941336c8ea93",
        "msg": "Revert \"Fix compatibility with latest puppetlabs-concat\"\n\nThis fix broke everything. Lets revert it.\n\nThis reverts commit 23cc3616cea78b8431181af748a1827add18974f.\n\nChange-Id: I9ce82c2e8f65606fbcedb4e2a4b37bc81edc5656",
        "cmtr": "Mathieu Gagné",
        "date": "2013-10-29 23:13:47-04:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "spec/defines/swift_storage_filter_healthcheck_spec.rb",
            "spec/defines/swift_storage_filter_recon_spec.rb"]
      },
      {
        "hash": "4157cb9a4141c071337f7e7c1946f32dd0342945",
        "msg": "Add Quota middlewares support\n\nTwo middlewares exist for managing quotas:\n- account_quotas\n- container_quotas\n\nChange-Id: Ic6d539db480d8749769279b44e1f38302ac0fa62\nSigned-off-by: Emilien Macchi <emilien.macchi@enovance.com>",
        "cmtr": "Emilien Macchi",
        "date": "2013-10-30 16:17:35+01:00",
        "files": [
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/container_quotas.pp",
            "spec/classes/swift_proxy_account_quotas_spec.rb",
            "spec/classes/swift_proxy_container_quotas_spec.rb",
            "templates/proxy/account_quotas.conf.erb",
            "templates/proxy/container_quotas.conf.erb",
            "tests/site.pp"]
      },
      {
        "hash": "c7a6239b9b59d846f08217f22cc53206f7ed801f",
        "msg": "Add Bulk middleware support\n\nBring Bulk middleware configurable in module.\n\nChange-Id: Iddec3f50402e6e2536fb7586f4966c06a1b75831\nSigned-off-by: Emilien Macchi <emilien.macchi@enovance.com>",
        "cmtr": "Emilien Macchi",
        "date": "2013-11-18 21:07:31+01:00",
        "files": [
            "manifests/proxy/bulk.pp",
            "spec/classes/swift_proxy_bulk_spec.rb",
            "templates/proxy/bulk.conf.erb",
            "tests/site.pp"]
      },
      {
        "hash": "3566f9fa651d8e50a81a3bcb042beb126da46f3d",
        "msg": "Fix filter name for puppetdb\n\nWhen creating the filter class name the last part is not capitalized.\nSo Swift::Storage::Filter::Healthcheck[bla] is named\nSwift::Storage::Filter::healthcheck[bla].  Puppet don't detect the\nsyntax error as the resource is \"created\" within a string.  But\npuppetdb's parser do not let this work.\n\nThis fix it and adjust the tests.\n\nChange-Id: If11c3ad0e98d14b9387b3daa4afeb118387100f8\nCloses-Bug: #1252998",
        "cmtr": "Sofer Athlan-Guyot",
        "date": "2013-11-20 03:37:58-05:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "000d63b65417b9cf73763e1d25eef1a8f3b695a7",
        "msg": "Fix auth_token configuration.\n\n- cache=swift.cache need to be in auth_token configuration not in\n  keystoneauth.\n- Make auth_token using the same facility for logging than main swift.\n\nCloses-Bug: #1254487\n\nChange-Id: If5a09da4d18f247dc42b99e6f666bc2867d06dcb",
        "cmtr": "Emilien Macchi",
        "date": "2013-11-24 18:52:48+01:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/keystone.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "templates/proxy/authtoken.conf.erb",
            "templates/proxy/keystone.conf.erb"]
      },
      {
        "hash": "c1aee547bc8393b75fabecb930b5dbee6b4111f4",
        "msg": "Bugfix: Fix fragment name for Quota middleware\n\n  Bugfix for commit 4157cb9 (uniformisation of pipeline names)\n  According other swift proxy middlewares, the concat fragments\n    doesn't contains « proxy » (concat frag. are generated by pipeline)\n    see l195 and l196 of tests/site.pp\n\nChange-Id: I99f9e5f5282b3e8db89fd56109ec8074ea1fa8f5",
        "cmtr": "Sebastien Badia",
        "date": "2013-11-27 16:21:09+01:00",
        "files": [
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/container_quotas.pp",
            "spec/classes/swift_proxy_account_quotas_spec.rb",
            "spec/classes/swift_proxy_container_quotas_spec.rb"]
      },
      {
        "hash": "14a2bd8c4fdad27fe708792c8a040c55a7476c56",
        "msg": "Create swift operator keystone roles\n\nDefining operator_roles in swift-proxy.conf requires\nthat these roles exist in keystone.\n\nBecause Keystone API access is not available on Swift\nproxy hosts in most cases, operator_roles keystone\nroles have been added to swift::keystone::auth class.\n\nAdded basic docs for swift::keystone::auth\n\nChange-Id: Ib8454f8ae1316d2589ff228ec1424c6cff69c6b5\nCloses-Bug: #1261662",
        "cmtr": "Matthew Mosesohn",
        "date": "2013-12-17 16:32:01+04:00",
        "files": [
            "manifests/keystone/auth.pp",
            "manifests/proxy/keystone.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "af129f0a93009293dba610ee487a41fb15027336",
        "msg": "Allow running of proxy and storage on the same node.\n\nThis adds conditionals to support a installation\nin which a user desires to run both swift proxy and\nstorage on the same node.\n\nChange-Id: I0cc827525968a9d1dc836c553a39f0ac13c4667e",
        "cmtr": "cbaesema",
        "date": "2013-12-18 09:00:39-06:00",
        "files": [
            "manifests/storage.pp"]
      },
      {
        "hash": "7e06de1066466890cc1cfc7d6e7bb675fb29d36f",
        "msg": "Fix the comment in manifests/storage/disk.pp\n\nChange-Id: Ibd28c9a1dad091272be56eea7023f9dbb8abdba5",
        "cmtr": "Tianshi Li",
        "date": "2013-12-27 20:45:34+08:00",
        "files": [
            "manifests/storage/disk.pp"]
      },
      {
        "hash": "449fd78f48cda9ef860f7cd25beda0e40f5a687c",
        "msg": "Remove redundant user ownership declaration and ensure spec test coherency\n\nswift is already set as a owner for File[] resources. This is a\nsimple cleanup that removes a redundant user declaration. The spec\ntests did not verify that default File[] values were applied to\n/var/lib/swift.\n\nChange-Id: I608ef39ca8bbf78ca8029a65979db659184baa3f",
        "cmtr": "David Moreau Simard",
        "date": "2014-01-09 11:48:04-05:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "a5b5e1211fbee62d9587c34e5cea3190046c694f",
        "msg": "Allow configuration of admin and internal protocols for keystone endpoint\n\nThe public address is already configurable (http or https). This change\nintroduces the possibility of also configuring admin and internal endpoint\nprotocols as well. They are defaulted to http and therefore the change is\nnon-breaking and backwards compatible.\nThere was also no existing spec tests for overriding the public protocol,\nthis is fixed in this commit.\n\nChange-Id: I1baafa444636729c4b73d2cca0753f6348fbd2a0",
        "cmtr": "David Moreau Simard",
        "date": "2014-01-17 15:38:00-05:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "6aa573e49af596fd31b01b8f88563ef29876e765",
        "msg": "dispersion: add endpoint_type parameter\n\nThis parameter is needed to perform a clean object dispersion.\n\nChange-Id: I1c17f49b22fd2b30c022d27a2bc20ce0bd150240\nSigned-off-by: Emilien Macchi <emilien.macchi@enovance.com>",
        "cmtr": "Emilien Macchi",
        "date": "2014-01-27 22:28:08+01:00",
        "files": [
            "manifests/dispersion.pp",
            "spec/classes/swift_dispersion_spec.rb"]
      },
      {
        "hash": "f8fbd8addfe07547666666a8cb2f68f5b1d8aa81",
        "msg": "Remove deprecated parameter 'address'\n\nThe address parameter has been deprecated since 2.0.0.\n\nChange-Id: I57b8469fb816c37c9d6a285c07796f685b121a90",
        "cmtr": "David Moreau Simard",
        "date": "2014-01-31 15:59:32-05:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "e2c9415a35e4a37d6b791f7a4d1ba8da6ee8decd",
        "msg": "Add proxyserver gatekeeper middleware\n\nswift::proxy::gatekeeper class will be used to configure\ngatekeeper middlerware.\n\nChange-Id: I2f90ae41ba98f9b7d2bd7f3c5ed92fdbcd8fa999\nImplements: blueprint icehouse-proxyserver-middlewares",
        "cmtr": "Xingchao Yu",
        "date": "2014-02-10 12:13:43+08:00",
        "files": [
            "manifests/proxy/gatekeeper.pp",
            "spec/classes/swift_proxy_gatekeeper_spec.rb",
            "templates/proxy/gatekeeper.conf.erb"]
      },
      {
        "hash": "69f677de0b13d30e6eb9689edd90e4f01c02467c",
        "msg": "Add swift::proxy::slo class\n\nswift::proxy::slo class is used to configure proxy slo middleware.\n\nChange-Id: Ic751d2e89de39478b55e3323ddf220610b1b7541\nImplements: blueprint icehouse-proxyserver-middlewares",
        "cmtr": "Xingchao Yu",
        "date": "2014-02-10 23:07:24+08:00",
        "files": [
            "manifests/proxy/slo.pp",
            "spec/classes/swift_proxy_slo_spec.rb",
            "templates/proxy/slo.conf.erb"]
      },
      {
        "hash": "af45e4200ecc26fc34df2f785b79eb89426bd69b",
        "msg": "Add support for middlewares with hyphens\n\nChange-Id: I1142270f76285190b600da759753011331a85909\nCloses-bug: #1278950",
        "cmtr": "David Moreau Simard",
        "date": "2014-02-11 11:17:02-05:00",
        "files": [
            "manifests/proxy.pp"]
      },
      {
        "hash": "eb5eb1f961e3cc7406a4ed7362f32fd8fe4076df",
        "msg": "Add ability to disable endpoint configuration\n\nIt is possible to disable endpoint configuration by setting\nthe value of the configure_endpoint and configure_s3_endpoint\nparameters to false.\n\nThe default value is true, preserving default behavior.\n\nChange-Id: I0f9afb78c181573a30f93dc4f862f86baa3efe31\nCloses-bug: #1279071",
        "cmtr": "Mathieu Gagné",
        "date": "2014-02-12 10:45:16-05:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "edd25ce6b30304705f9168e5c091fb2611d9cc7b",
        "msg": "Fix deprecation warnings in inline templates\n\nThe puppet-swift modules emit deprecation warnings of the form:\n\nWarning: Variable access via 'pipeline' is deprecated. Use\n  '@pipeline' instead. template[inline]:2\n   (at (erb):2:in `result')\n\nThese are due to missing @ signs in inline ERB templates in\nstorage/server.pp and proxy.pp.  This patch fixes them.\n\nChange-Id: I3745cfd86c4332f00bc10a0999088691b3833147\nCloses-Bug: #1282717",
        "cmtr": "Mark T. Voelker",
        "date": "2014-02-20 13:29:22-05:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "d0caf589164bb729493637a4c24cb24c83d8ca5e",
        "msg": "Support for allow_versions in swift containers\n\nThe previous patch (37493) was just implementing the feature partially\n\nChange-Id: I0adc55a22161fa3768d941e5ae996cc47048efa5",
        "cmtr": "Francesco Vollero",
        "date": "2014-02-25 17:39:12+01:00",
        "files": [
            "manifests/storage/all.pp",
            "spec/classes/swift_storage_all_spec.rb"]
      },
      {
        "hash": "2cce66ef44b011ba695dbc3e1586b2e0b8570666",
        "msg": "swift classes need to include swift::params\n\nSome of the swift classes use parameterized settings defined in\nswift::params but do not include the swift::params class.\n\nChange-Id: I7704bf42db4554566d27b510bbbedb8afe0fe7b3\nCloses-Bug: #1288252",
        "cmtr": "Chris Ricker",
        "date": "2014-03-05 08:58:10-08:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "4c86d39972b6d2ea198dfd44cac14f4eec0dd664",
        "msg": "Fix test files (address is now removed)\n\nThe new parameter is now public_address.\nrefs: f8fbd8addfe07547666666a8cb2f68f5b1d8aa81\n\nChange-Id: I114d9305ea91baf399ebe7bc09c95c50741fb5b1",
        "cmtr": "Sebastien Badia",
        "date": "2014-03-06 01:42:58+01:00",
        "files": [
            "tests/site.pp"]
      },
      {
        "hash": "21f9eff35c91b987803a9241f867b4443def6979",
        "msg": "Add client_package_ensure parameter and swift::client class\n\nIn the actual state of the manifest we can only setup package_ensure to\nabsent|present|latest. This commit allow end users to pin swift* and\nswift-client to a specific version. (note that swift* and\npython-swiftclient version are not the same).\n\nA new class (swift::client) manage now client packages, and we keep the\nretro-compatibility of commit 020b7723cbbe75fbcae89514a1e1882ae807fb27.\n\nChange-Id: I9bcc5a0f9d0a93a812fb574c4571fb9584077e4a",
        "cmtr": "Sebastien Badia",
        "date": "2014-03-06 02:09:52+01:00",
        "files": [
            "manifests/client.pp",
            "manifests/init.pp",
            "spec/classes/swift_client_spec.rb",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "01a3a40bcc43ffd492bea87e9b7b143bedccec37",
        "msg": "Fix spurious warning in pipeline check\n\nThe storage::server class includes a bit of logic that checks\nthe pipeline and warns if ${type}-server isn't included.\nHowever, the check has a logic flaw such that if $pipeline is an\narray and contains ${type}-server, the warning is triggered\nanyway.  This patch corrects the bad logic so that the warning\nisn't triggered spuriously.\n\nChange-Id: I7f81598f2f7910a2175fe772c9d82b2a1067826c\nCloses-Bug: #1289187",
        "cmtr": "Mark T. Voelker",
        "date": "2014-03-07 02:53:02-05:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "e4e0a7346846a9659fd300fb7f5f95bab9537d1b",
        "msg": "Parameterize the endpoint prefix\n\nThe endpoint prefix for keystone endpoints is now configurable (defaults\nto AUTH). This will allow for easier integration with SwiftStack\nwhich requires that the endpoint prefix not be AUTH.\n\nChange-Id: I102008aad86c0e35e3020961119a56c81da973f3",
        "cmtr": "Matt Fischer",
        "date": "2014-04-08 10:07:54-06:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "ed3ba7f889e4100a40403703b5ea0fdeab4d517e",
        "msg": "Add read_affinity, write_affinity support to proxy\n\nThis optionally provides the ability to configure read and write affinity\nin proxy-server.conf.\nDocumentation: http://docs.openstack.org/developer/swift/admin_guide.html\n\nChange-Id: Iea5aa6f73ddbdef119c5e70b29820c43640f0dac",
        "cmtr": "David Moreau Simard",
        "date": "2014-04-16 10:23:47-04:00",
        "files": [
            "manifests/proxy.pp",
            "spec/classes/swift_proxy_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "9ca38e7e442ac8e59bf21c78a43feea5c025501a",
        "msg": "Restore selinux context on swift mount\n\nMounting devices without specifying or restoring context ends up with\ndefault context file_t assigned for swift paths. On selinux systems it\nis nice to at least try to preserve predefined contexts on paths.\n\nChange-Id: I9b68c04cb0d4ee72c074e514db7141c3c077c978\nCloses-Bug: rhbz#1095503\nCloses-Bug: #1320853",
        "cmtr": "Lukas Bezdicka",
        "date": "2014-05-19 16:54:21+02:00",
        "files": [
            "manifests/storage/mount.pp",
            "spec/defines/swift_storage_mount_spec.rb"]
      },
      {
        "hash": "7847848f6a1c6a6e502b8868ad11a25536c5c21e",
        "msg": "Add dependency so swift config creation succeeds\n\nIntroduce dependencies so swift config files are not created until\nthe swift packages are installed to avoid failures due to missing\ndirectories, users, and groups supplied by the swift packages.\n\nChange-Id: Ifbd7e9c4f0ecdef03c5afe8459216ddaeb849bb7\nCloses-Bug: #1314772",
        "cmtr": "Chris Ricker",
        "date": "2014-05-23 16:14:18-04:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "2c6261251cd8e94aa26c0e91003878c25ba90726",
        "msg": "Include swift::params in swift::client\n\nOtherwise swift::client can't fetch the name of the package by itself\nif swift::params doesn't happen to be in the catalog.\n\nChange-Id: I3d15d0ce68ca084eb4573764b05e8723befbd7e7",
        "cmtr": "David Moreau Simard",
        "date": "2014-05-28 17:53:43-04:00",
        "files": [
            "manifests/client.pp",
            "spec/classes/swift_client_spec.rb"]
      },
      {
        "hash": "f7d1385d6990492705ddaa228ffa544ca235913a",
        "msg": "Avoid duplication error when ringserver and storage are on the same node\n\nThis commit aims to avoid duplication error when the ringserver and the storage node\nare on the same machine. For example when using loopback devices.\n\nChange-Id: Ic09af5d3a706d1a59c3fee7689b373d0a4de4e80",
        "cmtr": "Yanis Guenane",
        "date": "2014-05-30 08:36:12-04:00",
        "files": [
            "manifests/ringserver.pp",
            "spec/classes/swift_ringserver_spec.rb"]
      },
      {
        "hash": "281e111e58161502ff018baf084942365e195342",
        "msg": "Improve readability of swift::xfs\n\nImprove readability of swift::xfs using ensure_packages\nfrom the stdlib.\n\nChange-Id: I9550c6e9415e49b5363e21c73c935390c3a635e3",
        "cmtr": "Yanis Guenane",
        "date": "2014-06-02 10:27:25-04:00",
        "files": [
            "manifests/xfs.pp"]
      },
      {
        "hash": "9d592f61e4529795d51c481d0a33c86c84c0b6af",
        "msg": "Add swift::proxy::crossdomain class\n\nChange-Id: Ie7e5dfc3732ad552063293f16aa04a791bc5add8\nswift::proxy::crossdomain class is used to configure crossdomain middleware.",
        "cmtr": "Lukas Bezdicka",
        "date": "2014-06-03 16:00:01+02:00",
        "files": [
            "manifests/proxy/crossdomain.pp",
            "spec/classes/swift_proxy_crossdomain_spec.rb",
            "templates/proxy/crossdomain.conf.erb"]
      },
      {
        "hash": "6d35b1e8cf41a4c86b9aec7f9d7b5bced93cba7e",
        "msg": "Fix boolean that always returned true for selinux fact\n\nFacter returns 'false' if selinux is not enabled.\nPuppet evaluates it as true as it is not empty.\n\nChange-Id: I2f1d9a348fd981292aeef177b57f08e1b7ef2732\nCloses-bug: #1328547",
        "cmtr": "David Moreau Simard",
        "date": "2014-06-10 12:10:45-04:00",
        "files": [
            "manifests/storage/mount.pp",
            "spec/defines/swift_storage_mount_spec.rb"]
      },
      {
        "hash": "c6e0dff2b49183dd6d94d32e80d353172d3365ac",
        "msg": "Fix path for restorecon\n\nOn RHEL6 restorecon is in /sbin and on newer RHEL based systems it is in /usr/sbin\n\nCloses-Bug: rhbz#1109079\nChange-Id: I5662c4337ff23310c12a86834c51c6a3ec151a1f",
        "cmtr": "Lukas Bezdicka",
        "date": "2014-06-13 15:52:23+02:00",
        "files": [
            "manifests/storage/mount.pp",
            "spec/defines/swift_storage_mount_spec.rb"]
      },
      {
        "hash": "2a845da2944cb0a33e2f411c22be12f866b60a4f",
        "msg": "Allow setting reseller_prefix for keystone filter\n\nWhen using keystone, it's possible to modify the behaviour to\nuse a different prefix instead of the default AUTH_.\n\nThis patch allows you to be able to set that option when\ndeclaring your class definition.\n\nChange-Id: I11ff23d118e0f3d1792b43e1dc7a2c82c6826427",
        "cmtr": "Mohammed Naser",
        "date": "2014-09-05 18:44:13-04:00",
        "files": [
            "manifests/proxy/keystone.pp",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "templates/proxy/keystone.conf.erb"]
      },
      {
        "hash": "a2cae16d316c9e52fdfa7a15b097833c79de22dc",
        "msg": "Allow to customize log_name for services\n\nThis patch allows us to customize log_name for:\n- proxy-server\n- container-server\n- object-server\n- account-server\n\nWhich may be usefull for log collecting/parsing. Defaults remain\nas they were before the patch.\n\nChange-Id: I173652ec5bbe8d4382e10db4510d91aebceacab5",
        "cmtr": "Aleksandr Didenko",
        "date": "2014-10-14 21:14:37+03:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "22f09aed4f3c93a0d06ed1884b90dcaede60a6f7",
        "msg": "Add manage_service feature\n\npuppet-swift lacks of disabling service managing. This patch adds\n$manage_service and $enabled parameter to all relevant classes.\n\nCloses-bug: #1359823\nChange-Id: I3d632e3a26e9394d03d94089ae704904bf77aa51",
        "cmtr": "Lukas Bezdicka",
        "date": "2014-10-31 15:24:50+01:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb"]
      },
      {
        "hash": "5ebfa6a73f391410a7b4f2c940396789788f15d1",
        "msg": "Refactorise Keystone resources management\n\nRefactorise the code of Keystone resources management with backward\ncompatibility since we don't modify the unit tests except for the\n\"Require\" that we replace by a Puppet ordering syntax.\n\nChange-Id: Iebd35bd47d43733fdf2bc982936d49e531c62ea4\nImplements: blueprint common-openstack-identity-resource",
        "cmtr": "Emilien Macchi",
        "date": "2014-11-21 11:04:35-05:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "dec842497e5772607624c484db29d67200ce6703",
        "msg": "Remove deprecated class\n\n* swift::proxy::proxy-logging (deprecated since 3.0.0)\n\nChange-Id: If1d866454292b0b35351c459d22644327f526fec",
        "cmtr": "Mathieu Gagné",
        "date": "2014-11-25 15:07:14-05:00",
        "files": [
            "None"]
      },
      {
        "hash": "e6a225d79b21ab3caebc189da2d1062d57c0f55a",
        "msg": "Enlarging the scope of ssh module\n\nIncluding only ssh::server::install class in init.pp give too small scope\nand cause warnings about inability to look up ssh::server::ensure.\n\nCloses-Bug: 1355873\n\nChange-Id: I443c9f006b47c609e4a05da38b4a2124acbf886e",
        "cmtr": "Michal Skalski",
        "date": "2014-12-03 11:11:18+01:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_proxy_account_quotas_spec.rb",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_bulk_spec.rb",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_container_quotas_spec.rb",
            "spec/classes/swift_proxy_crossdomain_spec.rb",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_gatekeeper_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_slo_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/defines/swift_storage_filter_healthcheck_spec.rb",
            "spec/defines/swift_storage_filter_recon_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "spec/spec_helper.rb"]
      },
      {
        "hash": "1e1c6041acad135e37ed7e20cfcf2aedf82fbe9a",
        "msg": "Correct proxy::authtoken docs\n\nUpdates several proxy::authtoken documentation parameters so\nthat they match the implementation defaults.\n\nChange-Id: I572af876cbce704c0a252695afd44ec782f6b1d1",
        "cmtr": "Dan Prince",
        "date": "2015-01-08 16:06:09-05:00",
        "files": [
            "manifests/proxy/authtoken.pp"]
      },
      {
        "hash": "b8b443416de65f59dfc2dcfa23bfa7222906f55e",
        "msg": "Add seed parameter to ringbuilder::rebalance.\n\nThis patch adds an optional seed parameter to the\nswift::ringbuilder::rebalance definition. The seed\nparameter can be useful if you want to (manually)\ngenerate rings on independant servers and ensure that\nthe partition assignments are the same.\n\nChange-Id: I840b8fe0125ed25e84f7681fada1b1102e48f32b",
        "cmtr": "Dan Prince",
        "date": "2015-01-08 17:36:24-05:00",
        "files": [
            "manifests/ringbuilder/rebalance.pp",
            "spec/defines/swift_ringbuilder_rebalance_spec.rb"]
      },
      {
        "hash": "499386a89d2b5059445c887ff383655610f3fcb9",
        "msg": "Swift proxy won't start if using proxy:ceilometer\n\nThe Swift ceilometer middleware needs to be able to\nwrite its log file in the /var/log/ceilometer\ndirectory. Not all distributions set permissions\non this directory such that the swift user/group\ncan write into the ceilometer log directory. This\ncan cause the swift-proxy to fail to startup due\nto permissions issues.\n\nThis patch updates the swift::proxy::ceilometer so\nthat we create an empty /var/log/ceilometer/swift-proxy-server.log\nfile with proper permissions before starting the swift-proxy\nservice.\n\nChange-Id: If7b88bf51046317171f6fa85bb8c01390fa26a37",
        "cmtr": "Dan Prince",
        "date": "2015-01-26 22:11:02-05:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "60e785776b89bdfd4cd09c4260d0908c4fdf2d4b",
        "msg": "Remove non-ASCII characters from puppet doc\n\nIt crashes catalog compilation with this error:\n  Error 400 on SERVER: invalid byte sequence in US-ASCII\n\nChange-Id: Ia784c840b1b05ed43b3f72426caa480916d9635b\nCloses-bug: #1420979",
        "cmtr": "Mathieu Gagné",
        "date": "2015-02-11 16:34:39-05:00",
        "files": [
            "manifests/dispersion.pp",
            "manifests/keystone/dispersion.pp",
            "manifests/storage/filter/healthcheck.pp",
            "manifests/storage/filter/recon.pp"]
      },
      {
        "hash": "0d40df78fe40b002380cb3c58ac22dc6ee8b913f",
        "msg": "doc spelling corrections\n\nChange-Id: I2d19bcf6fa01aca6025cdd5828e35db4a2b17199",
        "cmtr": "vinsh",
        "date": "2015-02-12 14:28:09-07:00",
        "files": [
            "README.md",
            "manifests/storage.pp"]
      },
      {
        "hash": "119ff9c3e081281208c9b7da4290e94456b6dfb7",
        "msg": "Add support for identity_uri.\n\nThis patch adds the ability to set a new identity_uri parameter.\nIt also deprecates the old auth_host, auth_port, auth_protocol,\nand auth_admin_prefix parameters. Logic is in place so that\nusers of the deprecated settings should have a smooth upgrade\nprocess and get deprecation warnings until they adopt the\nnew settings.\n\nChange-Id: Ideefb4d824cbd5b4b83f9eb773a75e536e3458fb",
        "cmtr": "Gael Chamoulaud",
        "date": "2015-03-17 14:31:19+01:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "templates/proxy/authtoken.conf.erb"]
      },
      {
        "hash": "2caba862a8609528f10c975d7a956b246f2ca477",
        "msg": "Provide a mean to change the default rsync chmod\n\npuppet-rsync provides a default chmod of 0644.\npuppet-swift, until this commit, did not provide a way\nto change that default chmod.\nAccording to the experience in bug #1433390, it\nseemed possible for folders to be created in 0644, thus\ndenying access to the folders unless you were root.\n\nBackwards compatibility is maintained through the same\ndefaults.. It looks like the default is broken in\nthe context of Swift (unless it runs as root?), however.\nWe should consider putting 'Du=rwx,g=rx,o=rx,Fu=rw,g=r,o=r'\nwhich translates to 755 for folders and 644 for files.\n\nChange-Id: I7fcef6e4cdf478e808de2895168165989ff098e4\nCloses-bug: #1433390",
        "cmtr": "David Moreau Simard",
        "date": "2015-03-17 23:51:01-04:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "9a45dff83cac05eb419a38b53a36dccf35e4f2b1",
        "msg": "Adds ability to override service name for service catalog\n\nInstead of forcing the name of the service in the service catalog to\nmatch auth_name, this allows the ability to explicitly set the service\nname, spearately from auth_name.\nIf service_name is not specified, it's value defaults to the value\nof auth_name (which maintains the current behavior.)\n\nChange-Id: Ie586b2892c092a9694b067a9e0f28f36396de30d\nCloses-bug: #1359755",
        "cmtr": "Rico Lin",
        "date": "2015-03-20 09:00:57+08:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "15aa71f0015532fbe39b9f399c5bd000ca9b52c7",
        "msg": "Remove unused fragment_title variable\n\nThis variable was added in commit 020b772 but it doesn't\nappear that it was ever used.\n\nChange-Id: Ica96e07b58472a12ac3a06893a4fa89c1799b081",
        "cmtr": "Dan Prince",
        "date": "2015-03-21 11:32:39+00:00",
        "files": [
            "manifests/proxy/authtoken.pp"]
      },
      {
        "hash": "77be0932fc7d40a9bdf47c175c8ae5ffcc660f2f",
        "msg": "Upgrade puppet-lint and fix metadata, parameter and style lint issues\n\nThis patch bump puppet-lint gem and add metadata and parameters checks.\nMetadata lint issues (SPDX ID), missing parameters documentation and\nsyntaxe lint issues was also fixed in this patch\n\nDoc for metadata syntax.\nhttps://docs.puppetlabs.com/puppet/latest/reference/modules_publishing.html\n\nChange-Id: Ia6bb3483b3ffdbeed60b58702a36e0c7b31ffb86",
        "cmtr": "Sebastien Badia",
        "date": "2015-03-24 15:18:28+01:00",
        "files": [
            "Gemfile",
            "manifests/auth_file.pp",
            "manifests/bench.pp",
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "manifests/keystone/auth.pp",
            "manifests/keystone/dispersion.pp",
            "manifests/params.pp",
            "manifests/proxy.pp",
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/bulk.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/container_quotas.pp",
            "manifests/proxy/crossdomain.pp",
            "manifests/proxy/formpost.pp",
            "manifests/proxy/gatekeeper.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/slo.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/swauth.pp",
            "manifests/proxy/swift3.pp",
            "manifests/proxy/tempauth.pp",
            "manifests/proxy/tempurl.pp",
            "manifests/ringbuilder/create.pp",
            "manifests/ringserver.pp",
            "manifests/ringsync.pp",
            "manifests/storage/account.pp",
            "manifests/storage/all.pp",
            "manifests/storage/container.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/node.pp",
            "manifests/storage/object.pp",
            "manifests/storage/xfs.pp",
            "metadata.json"]
      },
      {
        "hash": "dc8657e2038b57b354b7ac622f711c34d241ec4c",
        "msg": "Add Puppet 4.x lint checks\n\nThis changes the puppet-lint requirement to 1.1.x, so that we can use\npuppet-lint plugins. Most of these plugins are for 4.x compat, but some\njust catch common errors.\n\nChange-Id: I9b41f170a782fecf88f241dc12288670b552b433",
        "cmtr": "Sebastien Badia",
        "date": "2015-03-25 13:46:00+01:00",
        "files": [
            "Gemfile",
            "manifests/auth_file.pp",
            "manifests/client.pp",
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "manifests/keystone/dispersion.pp",
            "manifests/proxy.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp",
            "manifests/ringserver.pp",
            "manifests/storage.pp",
            "manifests/storage/account.pp",
            "manifests/storage/all.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "manifests/storage/xfs.pp",
            "manifests/test_file.pp",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_spec.rb",
            "tests/all.pp",
            "tests/site.pp"]
      },
      {
        "hash": "88541bdef61665c752e31961706f395a53f53506",
        "msg": "Add base `swift` class name to call\n\nWhen the ring server manifest `swift::ringserver` is called\nthe client throws and error with missing class. The module\n`swift::ringserver` appears to refer to an incorrect class of\n`Class['ringbuilder']` which should be `Class['swift::ringbuilder']`.\n\nChange-Id: I9ddb12d2614440fe245aaaa10b7b17781a742f37\nImplements: Add swift base class name to class call\nCloses-Bug: 1414900",
        "cmtr": "Gael Chamoulaud",
        "date": "2015-03-25 17:10:26+00:00",
        "files": [
            "manifests/ringserver.pp"]
      },
      {
        "hash": "7a0c615db8a37cec64ceda96909a0743c9ac9161",
        "msg": "Add node_timeout parameter for proxy-server.conf\n\nThis commit allows to configure the node_timeout parameter\nof proxy-server.conf proxy-server middleware in the pipeline.\n\nChange-Id: Idbac35336a5b266f6de288a28243f91ee4d67afd",
        "cmtr": "David Moreau Simard",
        "date": "2015-03-25 13:55:39-04:00",
        "files": [
            "manifests/proxy.pp",
            "spec/classes/swift_proxy_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "9561ffffa21db52eca95e5682f0bbe6364994fdf",
        "msg": "Tag all Swift packages\n\nSome users wish to override the default package provider by their own.\n\nTag all packages with the 'openstack' to allow mass resource attributes\noverride using resource collectors.\n\nChange-Id: Ib0cec660f134e266006f41572cafcc4661ca1e67\nCloses-bug: #1391209\nSigned-off-by: Gael Chamoulaud <gchamoul@redhat.com>",
        "cmtr": "Gael Chamoulaud",
        "date": "2015-04-07 20:00:41+02:00",
        "files": [
            "manifests/client.pp",
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/proxy/swift3.pp",
            "manifests/storage/generic.pp",
            "spec/classes/swift_client_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "6dc85b0f7918fa295974f7afbb1a6b8a26f8f953",
        "msg": "Notify services if swift.conf is modified\n\nswift.conf contains the hash_suffix. With the current module, we have a\nrace condition where services can start *before* having the right hash\nin swift.conf, so some objects mays be put in quarantine.\n\nWhen usint swift_config (which affect swift.conf), we should restart all\nservices to ensure our ring is running correctly.\n\nChange-Id: I1087ba4ec079ca9c43bea9ff0511347632871ec2\nCloses-bug: #1442329",
        "cmtr": "Emilien Macchi",
        "date": "2015-04-09 17:03:07-04:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "b0a3d8a298eff338232a7347c09c86f8d0de4f67",
        "msg": "Remove creation of /home/swift\n\nIt isn't used in the puppet module anywhere, the signing directory is\ndefaulting to /var/cache/swift, if the user is setting it to /home/swift\nthey should also create it.\n\nChange-Id: I085bdba172b6316f9dcd19dcc8d44399be014647",
        "cmtr": "Derek Higgins",
        "date": "2015-04-22 15:59:22+01:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "00d10f1c3ebd8103cf256259397ad74b5af0818a",
        "msg": "Removal of SSH Components\n\nThis change removes all SSH-related components, their configuration\noptions, and tests.\n\nSSH is such a low-level service (from the perspective of any operator\ndeploying a cloud), that it is reasonable to assume that (or provide\ndirection that) SSH must be installed and configured prior to usage of\nthe puppet-swift module.\n\nWithout this change, there is a significant liklihood of confusion\noccurring in the likely case of SSH being managed elsewhere.\n\nChange-Id: I0f695788b2784669a3fb285e4bedf0159c4cb89a\nCloses-Bug: 1447259",
        "cmtr": "Javier Pena",
        "date": "2015-04-24 17:23:53+02:00",
        "files": [
            ".fixtures.yml",
            "manifests/init.pp",
            "metadata.json",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "c9809f8c92ad686b366ddeac60f93f2df03bf19a",
        "msg": "Added rsyslog logging support to object-server\n\nAlso change both proxy-server and object-server\n.conf templates to test if log_udp_server and\nlog_udp_port are nil, instead of an empty string.\nTesting for an empty string would have retruned\ntrue if set to 'undef' - for futer parser compat.\n\nChange-Id: Idac805f628dbec70a4adb6a1c021d85a743fdb72",
        "cmtr": "Adam Vinsh",
        "date": "2015-05-03 21:22:12-06:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "49fd248002605b80a51a35d254fdfca0736502e5",
        "msg": "mount.pp: fix lint issue\n\nMake sure ::selinux fact is a boolean to support all\nversions of Facter.\n\nChange-Id: I173fd7b916456a96642458ef52f2af1edfa58841",
        "cmtr": "Sebastien Badia",
        "date": "2015-05-22 11:38:13-07:00",
        "files": [
            "manifests/storage/mount.pp"]
      },
      {
        "hash": "3ceea9fa89cfe9c26c79146479a97c2519c332f7",
        "msg": "Fix concat file mode\n\nThe concat module passes the file permissions straight through to a file\nresource, so for this to work in future parser then the mode has to be a\nquoted string.\n\nChange-Id: Iddfa6416e68127f874ce38edcdf1e208def2473f",
        "cmtr": "Sebastien Badia",
        "date": "2015-05-22 11:46:09-07:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "ef9f9a4194237b3cd00446f42d1b407d203cbfd5",
        "msg": "Handle both string and array for memcache param.\n\nEvaluation Error: Left match operand must result in a String value. Got\nan Array. at .../modules/swift/manifests/proxy/cache.pp:26:6\n\nPlease note that Puppet syntax, while it defines a regex type, does NOT\npermit regex type arguments to be passed to functions (as literals or\nassigned to variables).\n\nChange-Id: Ia230720e2cafb5b03404cea1ba54dd3b0ced6af3\nCloses-Bug: #1449272\nSigned-off-by: Robin H. Johnson <robbat2@gentoo.org>",
        "cmtr": "Clayton O'Neill",
        "date": "2015-05-27 20:41:42+00:00",
        "files": [
            "manifests/proxy/cache.pp"]
      },
      {
        "hash": "f87e43e8a80ebf1e8bf9bb0a50160dfc6d735153",
        "msg": "Introduce public_url(_s3), internal_url(_s3) and admin_url(_s3)\n\nThis change deprecates the following parameters:\n- endpoint_prefix: replaced by public/internal/admin_url\n- port: replaced by public/internal/admin_url(_s3)\n- public_port: replaced by public_url(_s3)\n- public_protocol:  replaced by public_url(_s3)\n- public_address: replaced by public_url(_s3)\n- public_port: replaced by public_url\n- internal_protocol: replaced by internal_url\n- internal_address: replaced by internal_url\n- admin_protocol: replaced by admin_url\n- admin_address: replaced by admin_url\n\nAdd deprecation warnings if any of those values are provided\nwhile maintaining full backward compatibility.\n\nCo-Authored-By: David Moreau Simard <dmsimard@iweb.com>\nCo-Authored-By: Richard Raseley <richard@raseley.com>\nCloses-bug: #1274979\nChange-Id: Ie4afc21ac6e9539edd70635de7f3db957a22467e",
        "cmtr": "Mathieu Gagné",
        "date": "2015-06-11 18:17:28-04:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "9b9c27294b73f52a03c4b1dd799b995104a9a993",
        "msg": "lint: Fix lint issues (missing documentation for define types)\n\nThe gem 'puppet-lint-param-docs' was bumped to 1.2.0 and now handle\nclass and define type. This patch fix lint issues (missing documentation).\n\nChange-Id: If3718cc533e6e81071aba191310552031508f132",
        "cmtr": "Sebastien Badia",
        "date": "2015-06-26 19:52:59+02:00",
        "files": [
            "manifests/ringbuilder/create.pp",
            "manifests/ringsync.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/filter/recon.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/node.pp",
            "manifests/storage/server.pp",
            "manifests/storage/xfs.pp"]
      },
      {
        "hash": "8d7fa4d5a76defd8d20dfe698b7cedc719292f48",
        "msg": "keystone/auth: make service description configurable\n\nThis commit adds the service description (service_description) and service\ndescription for S3 (service_description_s3) as a class parameter in order\nto allowusers to update from a previous version if the service description\nis changed (incorrectly spelled or wrong description).\n\nChange-Id: I5b52ce2fb89c9e0c4e9470c676b35da249f89bbe\nCloses-Bug: #1468407",
        "cmtr": "Sebastien Badia",
        "date": "2015-06-30 12:02:43+00:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "f37b4ffbd75c7c35cc831dc32f11f73abdf4ec50",
        "msg": "Add max_header_size field for PKI tokens\n\nPKI tokens can be extremely large (>64k), requiring\na custom max_header_size to be configured.\nThis field defaults to the default from swift internal\ndefaults, which is 8192 bytes.\n\nChange-Id: I9d2df074e333e110df4dfeaf5ba1cdab5c4ff19f\nRelated-Bug: #1470664",
        "cmtr": "Matthew Mosesohn",
        "date": "2015-07-06 16:57:04+03:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "f69c046fe1a91d0b5280af9924ade93aa333fbe7",
        "msg": "Add swift::config class\n\nOther modules provide an X::config class to be able to specify\nparameters that are not yet part of the module. Swift was missing this\nfeature. This commit aims to add it for puppet-swift.\n\nChange-Id: Ifb6f78f177d9cc721f8388290c983c49137a2557",
        "cmtr": "Yanis Guenane",
        "date": "2015-07-20 11:58:53+02:00",
        "files": [
            "manifests/config.pp",
            "spec/classes/swift_config_spec.rb"]
      },
      {
        "hash": "da4a0dd2aecd695b22796447e1f9ab742890816d",
        "msg": "Add tag to package and service resources\n\nIn order to be able to take an action after all the packages of the\nmodule have been installed/updated or all the services have been\nstarted/restarted, we set a 'swift-package' and 'swift-service' tag\nfor each package and service of this module.\n\nAt the moment, there is a generic openstack tag that is not specific\nenough if one wants to take action upon a single module change.\n\nUse case :\n\nIf an action needs to be taken after all the packages have been\ninstalled or updated : Package <| tag == 'swift-package' |> -> X\n\nChange-Id: I1632bc0cee2a1c4cd5cc5d270a6d22919377c36b",
        "cmtr": "Yanis Guenane",
        "date": "2015-07-22 23:32:14+02:00",
        "files": [
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "56512264bfb43f6671b49a4e07a1930012a1914d",
        "msg": "Config resources applied after config template\n\nWhen swift_*_config resources are applied before the respective config\nfile, the resources are overwritten\n\nSet swift_${type}_config resources to be collected after\nConcat['/etc/swift/${type}-server.conf']\n\ntypes = {account,container,object,proxy}\n\nChange-Id: I8072c7c5e1780ba8b0d9a3553aae6ee52f5c7de1",
        "cmtr": "Guilherme Maluf",
        "date": "2015-07-27 09:13:34-03:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "25a96920f662f43c1c28e99e4636bdbecdca788d",
        "msg": "Add tempurl middleware options\n\nTempurl middleware is set with default options only\n\nThis commits make it possible to manage all tempurl configs defined in\nproxy-server.conf-sample[1]:\n\n  methods\n  incoming_remove_headers\n  incoming_allow_headers\n  outgoing_remove_headers\n  outgoing_allow_headers\n\nParameters are optional and can be set with array or string\n\n[1]  https://github.com/openstack/swift/blob/master/etc/proxy-server.conf-sample\n\nChange-Id: I1fab905a46aa58c43b8b3fd35ecdaf310bffc121",
        "cmtr": "Guilherme Maluf",
        "date": "2015-07-29 18:40:42-03:00",
        "files": [
            "manifests/proxy/tempurl.pp",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "templates/proxy/tempurl.conf.erb"]
      },
      {
        "hash": "62ba90a47571653672cdc1f81f3187ac88f8387c",
        "msg": "Add tempauth middleware options\n\nTempauth middleware template included only example entries\n\nThis commit provides most options to configure tempauth middleware,\nespecialy an array of accounts/users hash which defines the authenticated\nlist available by tempauth\n\nIt's add by default the admin account/user\n  user_admin_admin = admin .admin .reseller_admin\n\nChange-Id: Ib67d7deeeb2f98a464d18813ae4569c28a04472a",
        "cmtr": "Guilherme Maluf",
        "date": "2015-08-03 07:18:55-03:00",
        "files": [
            "manifests/proxy/tempauth.pp",
            "spec/classes/swift_proxy_tempauth_spec.rb",
            "templates/proxy/tempauth.conf.erb",
            "tests/all.pp"]
      },
      {
        "hash": "cd0e32b2c6cb6e3762ddc3edc8932f778161b482",
        "msg": "Fix ordering issue related to swift.conf\n\nThe file /etc/swift/swift.conf is managed by puppet.\nThere is no ordering contraint between swift_config resource and the\n/etc/swift/swift.conf file resource.\n\nIt causes randomly failure when the swift_config resource applies before\nthe file resource\n\nChange-Id: I08803a68ede6e3659e93c342949d8bb4e823ccd9",
        "cmtr": "Yanis Guenane",
        "date": "2015-08-11 12:17:22+02:00",
        "files": [
            "manifests/init.pp"]
      },
      {
        "hash": "a72e27f83c81316997e3b208f2246708c9573096",
        "msg": "Rely on autorequire for config resource ordering\n\nCurrently we specify the ordering of config resources wherever it is\nnecessary based on the presence of the file it will write to, or the\npresence of the package in charge of providing the file it will write\nto.\n\nThose kind of ordering can be specified directly at the resource level\nusing the autorequire mechanism. With this patch, any config resource\nwill make sure the package in charge of providing the file will be\ninstalled first.\n\nChange-Id: Icb3464cc0a747d40326d610d38806d059c9a0fc3",
        "cmtr": "Yanis Guenane",
        "date": "2015-08-13 09:54:06+02:00",
        "files": [
            "lib/puppet/type/swift_account_config.rb",
            "lib/puppet/type/swift_bench_config.rb",
            "lib/puppet/type/swift_config.rb",
            "lib/puppet/type/swift_container_config.rb",
            "lib/puppet/type/swift_dispersion_config.rb",
            "lib/puppet/type/swift_object_config.rb",
            "lib/puppet/type/swift_proxy_config.rb",
            "manifests/bench.pp",
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "spec/classes/swift_bench_spec.rb",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/unit/provider/swift_account_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_bench_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_container_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_dispersion_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_object_config/ini_setting_spec.rb",
            "spec/unit/provider/swift_proxy_config/ini_setting_spec.rb",
            "spec/unit/type/swift_account_config_spec.rb",
            "spec/unit/type/swift_bench_config_spec.rb",
            "spec/unit/type/swift_config_spec.rb",
            "spec/unit/type/swift_container_config_spec.rb",
            "spec/unit/type/swift_dispersion_config_spec.rb",
            "spec/unit/type/swift_object_config_spec.rb",
            "spec/unit/type/swift_proxy_config_spec.rb"]
      },
      {
        "hash": "16d9cc0cd84ae4d249c38760a0a40569ced43216",
        "msg": "Add incoming/outgoing chmod params to storage/all\n\nThis patch adds support for setting incoming_chmod and\noutgoing_chmod parameters to the swift::storage::all\ndefinition.\n\nThis is useful because leaving incoming_chmod and outgoing_chmod\nset to their default values causes deprecation warnings. Users\nof swift::storage::all may want to start setting the new\nvalues and thereby avoid these warning messages.\n\nChange-Id: I627ab2255087b0ebc2d3ddc9cd4a7a7d254abb65",
        "cmtr": "Dan Prince",
        "date": "2015-08-28 09:47:45-04:00",
        "files": [
            "manifests/storage/all.pp",
            "spec/classes/swift_storage_all_spec.rb"]
      },
      {
        "hash": "bbcccfa8014d3280bc1c909b6ab0e46eae12dc4e",
        "msg": "Initial msync run for all Puppet OpenStack modules\n\nThis patch is the initial modulesync run, it impacts:\n\n* gitignore: just a sync between projects\n* gemfile:\n  - update and allow to setup facter version and gem source\n  - split beaker gems with a dedicated group\n  - switch to rspec-puppet 2.2.0\n* rakefile:\n  - use the new syntax for lint configuration\n  - add a acceptance target\n* acceptance:\n  - sync nodesets\n* spec: added rspec coverage report\n\nChange-Id: Ibc1c4cd5f4d9b553b565c2625b7fc380a509edc8",
        "cmtr": "Sebastien Badia",
        "date": "2015-09-06 02:05:29+02:00",
        "files": [
            ".gitignore",
            ".sync.yml",
            "Gemfile",
            "Rakefile",
            "spec/acceptance/nodesets/centos-70-x64.yml",
            "spec/acceptance/nodesets/default.yml",
            "spec/acceptance/nodesets/nodepool-centos7.yml",
            "spec/acceptance/nodesets/nodepool-trusty.yml",
            "spec/acceptance/nodesets/ubuntu-server-1404-x64.yml",
            "spec/spec_helper.rb",
            "tests/all.pp"]
      },
      {
        "hash": "c2bb2fb31ee4c5a23fe4a218f195da2699fdfe06",
        "msg": "provide means to disable log_requests in config templates\n\nit is hard coded into account, object and container config templates to log\nevery request. Provide a means to disable log_requests via\nswift::storage::server and swift::storage::all, this reduces the log output.\n\nChange-Id: I2fd97c1406710bb0305955f8ff9b47f91c09e13d\nCloses-Bug: #1484614",
        "cmtr": "Benedikt von St. Vieth",
        "date": "2015-09-12 14:30:16+02:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "b3ff1ac9d4fea5a53ce246e1210be83fc7d65916",
        "msg": "Warn that object storage parameter mount_check changes next release\n\nThe 'mount_check' parameter is different in this Puppet module than\nin Swift. This patch adds a warning() to tell the user that starting\nin the next version, the default will change to match the upstream\ndefault from False to True.\n\nCloses-Bug: 1265243\n\nChange-Id: I7f98e523be2f8bbf39b70c544a1965c975c690dd\nSigned-off-by: Ben Kero <ben.kero@gmail.com>",
        "cmtr": "Ben Kero",
        "date": "2015-09-23 22:13:42-07:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "4ee7b74aed5bc609018ed3937deb3684fb561fd3",
        "msg": "Add support for DLO configuration.\n\nNew class swift::proxy::dlo for DLO configuration.\nAdd acceptance tests\nAdd docs to README\n\nChange-Id: Ie209e494d7affd72c3fea3f2cc3459b91d7c6765",
        "cmtr": "Aleksandr Didenko",
        "date": "2015-09-24 16:36:21-05:00",
        "files": [
            "README.md",
            "manifests/proxy/dlo.pp",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_proxy_dlo_spec.rb",
            "templates/proxy/dlo.conf.erb"]
      },
      {
        "hash": "e1ecd15f7de0fd727435d66190dcb66cfcd597c8",
        "msg": "Fix swift.conf / Swift_config ordering\n\nThis patch makes sure /etc/swift/swift.conf is created *before* trying\nto configure Swift with Swift_config provider.\n\nChange-Id: Ic470e11fae73e36cde67e1168aeab06773e3d974",
        "cmtr": "Emilien Macchi",
        "date": "2015-09-28 11:22:43-04:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "47ac5095b3b145f09cff5472aecb7561e944f8c8",
        "msg": "Stop managing file modes\n\nFile modes should be managed by packaging, not by Puppet.\nThis patch aims to stop managing File { mode => } parameters.\n\nPartial-bug: #1458915\nChange-Id: Ic38317521ac4a91bfdf234ecb4c74e4b00e3d887",
        "cmtr": "Emilien Macchi",
        "date": "2015-09-28 12:11:27-04:00",
        "files": [
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "manifests/proxy.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "981fcaeb53d6108e40330c65ede49c831445f08d",
        "msg": "proxy: ceilometer httpd support\n\nWhen running Ceilometer in WSGI, 'httpd' service will need to be allowed\nto write in /var/log/ceilometer.\n\nInstead of hardcoding 'swift' user for being part of 'ceilometer' group,\ncreate a new parameter 'group' so we can override which user we want\npart of 'ceilometer' group.\n\nChange-Id: Ib4c63ea386e93161cddb44c0a588f8e658c214e4",
        "cmtr": "Emilien Macchi",
        "date": "2015-09-29 13:48:00-04:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "c0a1195f53047180c0484b1e3f92d12751f0ba34",
        "msg": "Improve File resources idempotency\n\n* use selinux_ignore_defaults parameter for directory to avoid this kind\n  of issue:\n(...) seltype: seltype changed 'swift_var_run_t' to 'var_run_t'\n\n* Do not manage ownership for /etc/swift/*-server to avoid this kind of\n  issue:\n(...) owner changed 'root' to 'swift'\n\n* Do not manage /etc/init.d/swift-container-sync file, already managed\n  by packaging:\n~ dpkg -S /etc/init.d/swift-container-sync\nswift-container: /etc/init.d/swift-container-sync\n\nChange-Id: I1d742d118943fb0b11c47fd322052f50156e2994",
        "cmtr": "Emilien Macchi",
        "date": "2015-09-29 18:40:49+00:00",
        "files": [
            "manifests/init.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "d8a8b70547c2ec9bec98db012dc330f78568628d",
        "msg": "Add support for swift-object-expirer service\n\nThe swift-object-expirer service was not supported by\npuppet-swift. Adding support by creating a new class\n(swift::objectexpirer), and its associated custom type/provider.\n\nChange-Id: I498ffe525a7316c0091e4c9d8b7d9658234231f6",
        "cmtr": "Javier Pena",
        "date": "2015-09-30 10:09:09+02:00",
        "files": [
            "README.md",
            "lib/puppet/provider/swift_object_expirer_config/ini_setting.rb",
            "lib/puppet/type/swift_object_expirer_config.rb",
            "manifests/objectexpirer.pp",
            "manifests/params.pp",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_objectexpirer_spec.rb",
            "spec/unit/provider/swift_object_expirer_config/ini_setting_spec.rb",
            "spec/unit/type/swift_object_expirer_config_spec.rb"]
      },
      {
        "hash": "0a1626363697a623539eed568c46d60fd0a70a94",
        "msg": "Remove tenant parameter from keystone_user\n\nPuppet-swift to match recent update in keystone module.\nThe tenant parameter was made deprecated in Kilo and to be removed in Liberty.\nRemoving the tenant parmamter from keystone_user in dispersion.pp\n\nChange-Id: Ie86497f462e2a94819b8dbd1e4131890858af266",
        "cmtr": "Adam Vinsh",
        "date": "2015-11-03 15:37:49-05:00",
        "files": [
            "manifests/keystone/dispersion.pp",
            "spec/classes/swift_keystone_dispersion_spec.rb"]
      },
      {
        "hash": "e8ad981eff0f97c24a53197c42caf350627d3c9f",
        "msg": "Update ceilometer proxy template\n\nNow for using Ceilometer notifications from Swift we should\nuse Ceilometer middleware. Hence we need update template for Swift\nto account for incoming and outgoing traffic notifications.\n\n[1] I686e5d94fb72fd2a00973c91673edc417142ee2f\n[2] http://docs.openstack.org/developer/oslo.messaging/transport.html#oslo_messaging.TransportURL\n\nChange-Id: Ib6efd4a1ab4b76c74cffc546383f5382c24a8c43\nRelated-bug: #1510064",
        "cmtr": "Denis Egorenko",
        "date": "2015-12-02 18:20:59+03:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "templates/proxy/ceilometer.conf.erb"]
      },
      {
        "hash": "5a7d18975f891c628cdfce798c5c426046203fcb",
        "msg": "Manage swift with swiftinit service provider\n\nThe 'swiftinit' provider is a custom provider of the service type\nthat manages swift services using swift-init.\n\nUse of the swiftinit service provider is optional, the default is\nto use service providers specified in params file. This provider\nalso manages swift services starting at boot by adding or removing\na templated init or services file and making systemctl calls.\nSee README for more detail.\n\nA wrapper defined type 'swift::service' has been created to simplify\nuse of the swiftinit provider without adding logic to every class.\nthis wrapper also aids in input validation and testing of the\nswiftinit provider.\n\nTwo extra runs of apply_manifest have been added to the\nbasic_swift_spec acceptance test. The service_provider\nis set to \"swiftinit\".  The first run catches any errors upgrading\nto the swiftinit service provider and the second run tests\nidempotency.\n\nThis patch is an initial step towards using swift-init to manage\nmultiple swift services out of different configuration files such\nas is needed to run a separate replication network.\n\nChange-Id: I2f71c82c7a6c463f8c76a193409c0a17daa15bda",
        "cmtr": "Adam Vinsh",
        "date": "2015-12-07 16:00:50-05:00",
        "files": [
            "README.md",
            "None",
            "None",
            "None",
            "None",
            "lib/puppet/provider/service/swiftinit.rb",
            "manifests/objectexpirer.pp",
            "manifests/params.pp",
            "manifests/proxy.pp",
            "manifests/service.pp",
            "manifests/storage/account.pp",
            "manifests/storage/all.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/node.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_objectexpirer_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "spec/unit/puppet/provider/service/swiftinit_spec.rb"]
      },
      {
        "hash": "67df8085d0422d5eec43e52c0cd738c43e9b2d3f",
        "msg": "Use include for swift::storage::${type}\n\nRequire operator specify swiftinit provider\non supported components rather then pass it through.\n\nChange-Id: I7e35c0a49f51e252573f46af9ba2a8eda968e3e2\nCloses-Bug: #1524381",
        "cmtr": "Adam Vinsh",
        "date": "2015-12-09 10:25:21-05:00",
        "files": [
            "README.md",
            "manifests/storage/all.pp",
            "manifests/storage/node.pp",
            "manifests/storage/server.pp",
            "spec/acceptance/basic_swift_spec.rb"]
      },
      {
        "hash": "1b3864d211e1844eca4c9078640d05245b192d4c",
        "msg": "Document and example for storage filters use\n\nswift::storage::filter::recon\nswift::storage::filter::healthcheck\n\nChange-Id: I770a201b36fa82e5063c02e5d84d4c231211919b\nCloses-Bug: #1466707",
        "cmtr": "Adam Vinsh",
        "date": "2015-12-10 18:20:03-05:00",
        "files": [
            "README.md",
            "tests/site.pp"]
      },
      {
        "hash": "b75290b54c2a802ce7a1bec57c1985fcb6da9f99",
        "msg": "Require swift package installation before swift user.\n\n- The user 'swift' is being ensured without any restriction on openstack-swift\npackage, so it is highly potential that the user is created before package is\ninstalled with /bin/bash instead of /sbin/nologin as shell.\n\nCloses-bug: #1525243\nChange-Id: I4c7b7afb7eefeda0379db631f14eb8c32cbe8671\nSigned-off-by: Gael Chamoulaud <gchamoul@redhat.com>",
        "cmtr": "Gael Chamoulaud",
        "date": "2015-12-11 10:05:46+01:00",
        "files": [
            "manifests/init.pp"]
      },
      {
        "hash": "bc2085a2742e825ddac53cefea97161f217c6f8f",
        "msg": "Create ring builders under swift user\n\nSince we're running ring rebalance under 'swift' user, we also\nneed to create ring builders under the same user.\n\nChange-Id: I04972e883b8f5f6355737545525f6dc32582563d\nRelated-bug: #1518305",
        "cmtr": "Kyrylo Galanov",
        "date": "2015-12-15 12:48:39+02:00",
        "files": [
            "manifests/ringbuilder/create.pp",
            "spec/defines/swift_ringbuilder_create_spec.rb"]
      },
      {
        "hash": "7f7e4c5952fe91825b9e0f66bd9f1f133f98c282",
        "msg": "Define ${name}-auditors in storage/generic.pp\n\nAll three storage servers need an auditor, thus it is possible to\nreuse the same template for all of them and reducing duplicate code.\n\nAdded a new test to ensure auditor services are defined.\n\nAlso update notifications to include the replicators as well.\n\nChange-Id: I1fcbf55d1326790b35cd620196ca7e373b40df1a",
        "cmtr": "Adam Vinsh",
        "date": "2015-12-17 18:58:23-05:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "e52ebb053b62b61bfe26cdf338d71a2f47d2d0e9",
        "msg": "Change defaults fro incoming/outgoing chmod (rsync)\n\nIn a previous release, we sent a warning about the default\nincoming/outgoing chmod that was configured for rsync.\nWe mentionned it was risky and people should avoid using 0644 like it\nwas by default. For backward compatibility, we kept this default and\nsent a warning.\n\n2 releases later, this patch aims to change the default and stop to send\nthe warning.\n\nChange-Id: Ic3aaaec0eee4225bf2021937edf972528ea72e2c\nCloses-bug: #1433390",
        "cmtr": "Emilien Macchi",
        "date": "2015-12-24 15:00:48+01:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "b73516aff617d5b31bf5fbbc9553260fa9bd98a2",
        "msg": "Stop calling ::concat::setup\n\n::concat::setup is a private class deprecated as a public class [1].\nThis patch makes sure we use concat module the right way and avoid\na warning.\n\n[1] https://github.com/puppetlabs/puppetlabs-concat/blob/master/manifests/setup.pp#L14\n\nChange-Id: Ib7f72f696e8704f3f4d5cff6b06dbcd981d6b395",
        "cmtr": "Emilien Macchi",
        "date": "2016-01-03 13:23:28-05:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/classes/swift_proxy_account_quotas_spec.rb",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_bulk_spec.rb",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_container_quotas_spec.rb",
            "spec/classes/swift_proxy_crossdomain_spec.rb",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_gatekeeper_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_slo_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempauth_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb"]
      },
      {
        "hash": "318b900706bedb7fba53b72cf0bb434eeeab0bdf",
        "msg": "Set mount_check to True by default\n\nIn a previous release, we sent a deprecation warning for mount_check\nparameter which was set to False by default, while upstream uses True.\n\nThis patch aims to use upstream default, True, by default in our\ninterface.\n\nDepends-On: I0bb1ccf4c0adc4e217e2989bd50d96741fa156f7\nChange-Id: I453e24509a3f05d1fea69d47577cf81535a1ee13",
        "cmtr": "Emilien Macchi",
        "date": "2016-01-05 09:57:24-05:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "2ffbf4527773f94425bde2e9df12a18fe95fef4c",
        "msg": "Notify related services on config file change\n\nAdds service restarts for the following:\naccount-reaper, container-updater, object-updater,\ncontainer-sync, (account/container/object)-auditor.\nEach will now be reloaded if their related config file\nis updated.\n\nChange-Id: I546bba253bbd0fe890fb77bb9a9f1e632fea242c",
        "cmtr": "Adam Vinsh",
        "date": "2016-01-07 22:46:56-05:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "56c3aad3ea756d53cc5d65a0c3f446e63c520389",
        "msg": "Stop calling ::concat::setup\n\nThe class is deprecated and has no effect, let's drop it.\n\nChange-Id: I36a1bf9f9ac50b7c3d437562e95d172b8e6a95ad",
        "cmtr": "Emilien Macchi",
        "date": "2016-01-11 15:35:22-05:00",
        "files": [
            "manifests/proxy.pp",
            "spec/defines/swift_storage_filter_healthcheck_spec.rb",
            "spec/defines/swift_storage_filter_recon_spec.rb"]
      },
      {
        "hash": "665557f485c06c6d9c4f31cd247c08387202e3ac",
        "msg": "Make keystone user/role options configurable\n\nRemove hardcode for configure_user(_role) parameter.\n\nChange-Id: I15a9fa7f56552b63d62377d60a03d3857977872a\nRelated-Bug: #1527517",
        "cmtr": "Kyrylo Galanov",
        "date": "2016-01-21 15:52:52+02:00",
        "files": [
            "manifests/keystone/auth.pp",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "c41983cd87f9f6cea61e19945985962529dc5aac",
        "msg": "Update to swift hash parameters\n\nThis change adds the ability to configure the swift_hash_path_prefix for\nswift. Additionally it deprecated swift_hash_suffix in favor of a new\nparameter called swift_hash_path_suffix for consistency.\n\nChange-Id: I26935fe21af42b488f4479c4e50e8f481a75ea40\nCloses-Bug: #1505269",
        "cmtr": "Alex Schultz",
        "date": "2016-01-26 08:18:28-07:00",
        "files": [
            "manifests/init.pp",
            "spec/classes/swift_spec.rb"]
      },
      {
        "hash": "bded649fc234bac569cf16370d74944908a9b080",
        "msg": "Remove unused keystone::python reference\n\nThis class doesn't do anything useful, the providers are doing the work.\n\nChange-Id: I1b6b506acba6510900da633f7eb2ef0f2189a4a3",
        "cmtr": "Matt Fischer",
        "date": "2016-02-23 04:19:22-07:00",
        "files": [
            "manifests/proxy/s3token.pp",
            "spec/classes/swift_proxy_s3token_spec.rb"]
      },
      {
        "hash": "379d9fc5f50e57d10d8248616a79318b4ab8c6cb",
        "msg": "Add rmq credentials to each host in proxy\n\nOtherwise it will try to connect with default guest/guest credentials\n\nChange-Id: I097e768afd8783c78caee7aba4ac6600c7e55e47\nCloses-bug: #1560055",
        "cmtr": "Kyrylo Galanov",
        "date": "2016-03-28 17:02:10+02:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "templates/proxy/ceilometer.conf.erb"]
      },
      {
        "hash": "6a434381500c0eb1a362d97e8ebaa511f585b5a9",
        "msg": "Keystone endpoints should go before the service\n\n  This commit sets up a relationship in Class[swift::keystone::auth] so\n  at to guarantee that all endpoints are setup before launching any\n  swift services.\n\nChange-Id: I95476d5a61787d5c27c46d9daa84f62911c24183",
        "cmtr": "Cody Herriges",
        "date": "2016-04-06 11:41:37-07:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "1c91097780139db12977ef5be2c0102fd154e8c7",
        "msg": "Replace File with Concat in dependencies\n\nUp to 2.0.0 concat was done as a define which contains File. Starting\nfrom 2.0.0 concat::fragment define was rewritten as provider. This patch\nreplaces dependencies to File from concat::fragment with Concat to\nenable concat ~> 2.0.0\n\nChange-Id: Ifccc1bf2260dbbceb75b6bbe1d6b5bbbbb657a12",
        "cmtr": "Sergii Golovatiuk",
        "date": "2016-04-18 17:17:46+02:00",
        "files": [
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "f569ed0edaa46f986c8a844d6ed0ee41ed86ad8a",
        "msg": "Fix up some typos in the proxy manifests\n\nThe introductory comments in the manifests for proxy keystone and\ntempauth had some typos to be corrected. The proxy staticweb\ncomments accidentally called itself the manifest for cache_errors,\nso fix that up as well.\n\nChange-Id: I76c7c5201aa351ffcb060bf6ec5127aeda08ee2b",
        "cmtr": "Elizabeth K. Joseph",
        "date": "2016-05-01 11:48:13-07:00",
        "files": [
            "manifests/proxy/keystone.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/tempauth.pp"]
      },
      {
        "hash": "5785a2895ffafcb41496007550134704d705d9bf",
        "msg": "Do not use any specific service provider for ubuntu\n\nLet's do not hard code some service provider names for Debian\nas it done for RedHat OS.\n\nChange-Id: I95b52432723c1d2ed10fb7ab78df57869127cfeb",
        "cmtr": "Denis Egorenko",
        "date": "2016-05-13 18:59:59+03:00",
        "files": [
            "manifests/params.pp",
            "spec/classes/swift_objectexpirer_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "df59fcbb3f12021fc59cf92432a49dd96c054474",
        "msg": "Grammar corrections in comment\n\nChange-Id: I077ece4676db9638dc7213c5a54d3a89e4eb96bd",
        "cmtr": "Matt Fischer",
        "date": "2016-05-18 15:25:19+00:00",
        "files": [
            "manifests/init.pp"]
      },
      {
        "hash": "9ecbadab2b505f2f6552bba1f75af8546b153324",
        "msg": "Remove verbose\n\nverbose is deprecated we dont need in README and site.pp\n\nChange-Id: Iae5d6e5752f6b717e5e6943bff9a44bc5c81a02b",
        "cmtr": "Iury Gregory Melo Ferreira",
        "date": "2016-05-19 10:09:44-03:00",
        "files": [
            "README.md",
            "tests/site.pp"]
      },
      {
        "hash": "056e2579bda523b09f230a3042585f4441223346",
        "msg": "Add keystone to swift-proxy, use dispersion-report\n\nThe existing acceptence test configures keystone on the swift node\nbut does not configure the swift service to use keystone.  This change\nadds the neccesary middleware to the proxy node to actually use keystone.\nFurther proof of keystone working is acheived by enabling the\nswift-dispersion-report class which uploads test objects to swift\nafter first authenticating with keystone.  This change also updates the\ncall to keystone used by the dispersion class to an updated format.\n\nChange-Id: Ibf97762f9b19c0ccb72178b04a1a86028bab8bcf",
        "cmtr": "Adam Vinsh",
        "date": "2016-05-23 16:44:30+00:00",
        "files": [
            "manifests/dispersion.pp",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_dispersion_spec.rb"]
      },
      {
        "hash": "c659733d39c1c3e4739db272645d80e7985e8883",
        "msg": "Add hooks for external install & svc management\n\nThis adds defined anchor points for external modules to hook into the\nsoftware install, config and service dependency chain.  This allows\nexternal modules to manage software installation (virtualenv,\ncontainers, etc) and service management (pacemaker) without needing rely\non resources that may change or be renamed.\n\nChange-Id: I00cf4846bb933291469be94c9debed425eddf798",
        "cmtr": "Adam Vinsh",
        "date": "2016-05-25 08:52:47-04:00",
        "files": [
            "manifests/auth_file.pp",
            "manifests/bench.pp",
            "manifests/client.pp",
            "manifests/config.pp",
            "manifests/deps.pp",
            "manifests/dispersion.pp",
            "manifests/init.pp",
            "manifests/keystone/auth.pp",
            "manifests/keystone/dispersion.pp",
            "manifests/objectexpirer.pp",
            "manifests/proxy.pp",
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/bulk.pp",
            "manifests/proxy/cache.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/container_quotas.pp",
            "manifests/proxy/crossdomain.pp",
            "manifests/proxy/dlo.pp",
            "manifests/proxy/formpost.pp",
            "manifests/proxy/gatekeeper.pp",
            "manifests/proxy/healthcheck.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/proxy_logging.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/slo.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/swauth.pp",
            "manifests/proxy/swift3.pp",
            "manifests/proxy/tempauth.pp",
            "manifests/proxy/tempurl.pp",
            "manifests/ringbuilder.pp",
            "manifests/ringbuilder/create.pp",
            "manifests/ringbuilder/rebalance.pp",
            "manifests/ringserver.pp",
            "manifests/ringsync.pp",
            "manifests/service.pp",
            "manifests/storage.pp",
            "manifests/storage/account.pp",
            "manifests/storage/all.pp",
            "manifests/storage/container.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/filter/healthcheck.pp",
            "manifests/storage/filter/recon.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/node.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "manifests/storage/xfs.pp",
            "manifests/test_file.pp",
            "manifests/xfs.pp",
            "releasenotes/notes/external_install_mgmt_hooks-32ca80d2280efc53.yaml",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_client_spec.rb",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb"]
      },
      {
        "hash": "ec4db849c8840a9203bdf023c22ff0d208f5a801",
        "msg": "Allow to configure container_sync middleware\n\nAdd possibility to configure container_sync middleware. Also\nallow to configure swift container-sync-realms, which specifying\nthe allowable clusters and their information, which is required\nfor container_sync.\n\nChange-Id: I183841cca3daf72a30db160b88c9e3a9335ad7dc",
        "cmtr": "Denis Egorenko",
        "date": "2016-05-30 16:03:44+03:00",
        "files": [
            "README.md",
            "lib/puppet/provider/swift_container_sync_realms_config/ini_setting.rb",
            "lib/puppet/type/swift_container_sync_realms_config.rb",
            "manifests/config.pp",
            "manifests/proxy/container_sync.pp",
            "releasenotes/notes/container_sync-5869bca433355047.yaml",
            "spec/acceptance/swift_config_spec.rb",
            "spec/classes/swift_proxy_container_sync_spec.rb",
            "spec/unit/provider/swift_container_sync_realms_config/ini_setting_spec.rb",
            "spec/unit/type/swift_container_sync_realms_config.rb",
            "templates/proxy/container_sync.conf.erb"]
      },
      {
        "hash": "2d84cf4e1696a3d6eb3f9b62a9d7e41df04dc11c",
        "msg": "Remove deprecated swift_hash_suffix\n\nswift_hash_suffix was deprecated in Mitaka and\nshould be removed in Newton.\n\nSee http://docs.openstack.org/icehouse/config-reference/content/swift-general-service-configuration.html\n\nChange-Id: I3b5c55607bcd8a2aa5288cdfefa96a152d1682cb",
        "cmtr": "Iury Gregory Melo Ferreira",
        "date": "2016-06-03 12:55:02+00:00",
        "files": [
            "README.md",
            "manifests/init.pp",
            "releasenotes/notes/remove_swift_hash_suffix-cd6b8bdf62990b7b.yaml",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_bench_spec.rb",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_ringserver_spec.rb",
            "spec/classes/swift_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "tests/all.pp",
            "tests/site.pp"]
      },
      {
        "hash": "ce3bd6fd8fee5a534319f578f359d82bb2f1598b",
        "msg": "Change default service_name to 'swift'\n\nWhile we were already able to pick an independent auth_name and\nservice_name; the service_name was defaulting to auth_name. Now it\nhas a value of its own to be consistent with other modules.\n\nChange-Id: I24e091d509775a11b42298185db71ca00b94b4fe\nRelated-Bug: #1590040",
        "cmtr": "Marcellin Fom Tchassem",
        "date": "2016-06-14 12:58:36+00:00",
        "files": [
            "manifests/keystone/auth.pp",
            "releasenotes/notes/keystone-auth-name-d2f0ea23d797b555.yaml",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "a5e15bbf4a40d51ea2914e28e8cfada1d8b17626",
        "msg": "Include openstacklib defaults manifest.\n\nThis provides a mechanism for setting default across all modules.\n\nChange-Id: Ie7e3ab180b8f55db698f14f269d5f50b4512b187\nRelated-Bug: 1599113",
        "cmtr": "Sofer Athlan-Guyot",
        "date": "2016-07-11 11:24:57+02:00",
        "files": [
            "manifests/params.pp",
            "spec/classes/swift_bench_spec.rb",
            "spec/classes/swift_client_spec.rb",
            "spec/classes/swift_dispersion_spec.rb",
            "spec/classes/swift_objectexpirer_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/classes/swift_ringserver_spec.rb",
            "spec/classes/swift_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/classes/swift_storage_spec.rb",
            "spec/defines/swift_storage_generic_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "e8959ee6317ca6af10910f6e4af48419b9ccb528",
        "msg": "Fix comment typo\n\nChange-Id: I391fc17ade74b949ead322f57b0703107a33aa5a",
        "cmtr": "David Moreau-Simard",
        "date": "2016-07-15 09:55:56-04:00",
        "files": [
            "manifests/proxy/formpost.pp"]
      },
      {
        "hash": "0bb520569b0ed2a8b986af63dd190d0d80985f90",
        "msg": "Deprecate is_admin option from Keystone mw config in Swift proxy\n\nThis option has been deprecated some time ago, and finally been removed\nin Mitaka. Let's deprecate this setting in puppet-swift too; there is no\nlonger a reason to use it from Mitaka on. This patch makes it a noop\nparameter.\n\nSee Id6bc10c3e84262c0a9e6160a76af03c0ad363e9c in Swift for reference.\n\nChange-Id: I525f5010d56ccdd205a0f9d55db99b0f359f35c3\nCo-Authored-By: Pete Zaitcev <zaitcev@redhat.com>",
        "cmtr": "Christian Schwede",
        "date": "2016-07-21 16:59:08+02:00",
        "files": [
            "manifests/proxy/keystone.pp",
            "releasenotes/notes/swift_keystone_middleware_is_admin-3743720dc053f65e.yaml",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "templates/proxy/keystone.conf.erb"]
      },
      {
        "hash": "287a714da4e92b138aa56586ef69af04ed2c9bdd",
        "msg": "Allow for usage of storage::disk via Hiera\n\nThis submission adds a wrapper for the storage::disk defined type\nwhich permits provisioning of a hash of disks via storage::disks\n\nChange-Id: I3692b17988f8eacb7b8a7df1006a7fe24f587065",
        "cmtr": "Giulio Fidente",
        "date": "2016-08-05 13:11:06+00:00",
        "files": [
            "manifests/storage/disks.pp",
            "spec/classes/swift_storage_disks_spec.rb"]
      },
      {
        "hash": "623dffa2f738d2145edde3564071930a4765dbfe",
        "msg": "Add CORS settings\n\nAllow configuring CORS settings.\n\nChange-Id: I60df82ce6272a4c1ad22b6842f22713c7d7c7c63",
        "cmtr": "Martin André",
        "date": "2016-08-23 18:52:31+02:00",
        "files": [
            "manifests/proxy.pp",
            "releasenotes/notes/swift_cors-31b9a30d0eca57ce.yaml",
            "spec/classes/swift_proxy_spec.rb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "658f6589de653514f8881156daddf833a4b20559",
        "msg": "Add statsd configuration options\n\nThis change adds the ability to configure the statsd configuration\noptions for the account, container, object and proxy services.\n\nChange-Id: I9b06c86b44162cbd35b0aa3a5d237dcc5eea318b\nCloses-Bug: #1616512",
        "cmtr": "Alex Schultz",
        "date": "2016-08-24 12:27:19-06:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "releasenotes/notes/statsd-configuration-c839c5485f761109.yaml",
            "spec/classes/swift_storage_all_spec.rb",
            "templates/account-server.conf.erb",
            "templates/container-server.conf.erb",
            "templates/object-server.conf.erb",
            "templates/proxy-server.conf.erb"]
      },
      {
        "hash": "a266ab91ed8a15ec6c9706c0affced780663f78d",
        "msg": "Change swift authtoken\n\nUpdate authtoken class with parameters from\ndocumentation [1]\n\nWe cant use the resource because swift does not\nuse keystone_authtoken section.\n\ndeprecations:\n- admin_password, use password instead.\n- admin_user, use username instead.\n- admin_tenant_name, use project_name instead.\n- identity_uri, use auth_url instead.\n- admin_token, no usage.\n\nremovals:\n- Old parameters (already deprecated)\n\n[1]\nhttp://docs.openstack.org/mitaka/config-reference/object-storage/proxy-server.html\n\nChange-Id: I1eb4b0712214c059c713001ad991cbe92cd01711",
        "cmtr": "Iury Gregory Melo Ferreira",
        "date": "2016-08-25 01:22:56-03:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "releasenotes/notes/authtoken-b49c75db4b7429cb.yaml",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "templates/proxy/authtoken.conf.erb",
            "tests/site.pp"]
      },
      {
        "hash": "411ccbf2241324e698f88b3a66ef51443a9be553",
        "msg": "Fix doc typo\n\nChange-Id: I039b25e512664426bf3677ce1c9b2764016154ba",
        "cmtr": "Ivan Berezovskiy",
        "date": "2016-08-31 11:48:27+00:00",
        "files": [
            "manifests/proxy/authtoken.pp"]
      },
      {
        "hash": "da01dd7bd0cf15863c39ea5e7e108efea60c27d0",
        "msg": "Fix middleware order of proxy pipeline and add missing modules\n\nThis patch fixes the order of the middlewares defined in the Swift proxy\nserver pipeline.\n\nSources for the order:\nhttps://github.com/openstack/swift/blob/master/etc/proxy-server.conf-sample#L91-L99\nhttp://docs.openstack.org/developer/swift/middleware.html#\nhttps://github.com/openstack/swift3/blob/master/etc/proxy-server.conf-sample#L9\nhttps://github.com/openstack/ceilometermiddleware/blob/master/ceilometermiddleware/swift.py#L21-L22\n\nThese are all values in order:\n\n 10 catch_errors\n 20 gatekeeper\n 30 healthcheck\n 40 (reserved for proxy_logging, see below)\n 50 cache\n 60 container_sync\n 70 swift3\n 80 s3token\n 90 ratelimit\n100 crossdomain\n110 bulk\n120 tempurl\n130 formpost\n140 copy\n150 tempauth\n160 swauth\n170 authtoken\n180 keystone\n190 staticweb\n200 copy\n210 account_quotas\n220 container_quotas\n230 slo\n240 dlo\n250 versioned_writes\n260 ceilometer\n270 proxy-logging\n280 proxy-server\n\nThe copy and versioned_writes middlewares have been added too.\n\nThe proxy_logging should be added a second time at position 40, but the\nactual value is 270 to have the final proxy-logging just before the\nproxy-server.\n\nAlso renamed the suffix 'swauth' in the 'tempauth' manifest to be\n'tempauth'; 'swauth' is used in a different manifest.\n\nCloses-Bug: 1618514\nChange-Id: I99433720e32dc3557b809c8d42ce3d5981c199c3",
        "cmtr": "Christian Schwede",
        "date": "2016-09-01 14:51:28+02:00",
        "files": [
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/bulk.pp",
            "manifests/proxy/cache.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/container_quotas.pp",
            "manifests/proxy/container_sync.pp",
            "manifests/proxy/copy.pp",
            "manifests/proxy/crossdomain.pp",
            "manifests/proxy/dlo.pp",
            "manifests/proxy/formpost.pp",
            "manifests/proxy/gatekeeper.pp",
            "manifests/proxy/healthcheck.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/proxy_logging.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/slo.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/swauth.pp",
            "manifests/proxy/swift3.pp",
            "manifests/proxy/tempauth.pp",
            "manifests/proxy/tempurl.pp",
            "manifests/proxy/versioned_writes.pp",
            "releasenotes/notes/proxy-pipeline-order-d6a1a6412451f95e.yaml",
            "spec/classes/swift_proxy_copy_spec.rb",
            "spec/classes/swift_proxy_tempauth_spec.rb",
            "spec/classes/swift_proxy_versioned_writes_spec.rb",
            "templates/proxy/copy.conf.erb",
            "templates/proxy/versioned_writes.conf.erb"]
      },
      {
        "hash": "4d2dd27e5d8e37012602a71013b18b695e3ab617",
        "msg": "Fix puppet-lint before upgrading gem\n\nRemoving puppet-lint warnings\nin favor of upgrading to latest gem\n\n2016-09-13 21:09:55.884631 | manifests/dispersion.pp:111:WARNING: line has more than 140 characters\n2016-09-13 21:09:55.884753 | manifests/dispersion.pp:112:WARNING: line has more than 140 characters\n2016-09-13 21:09:55.884790 | manifests/keystone/auth.pp:191:WARNING: line has more than 140 characters\n\nChange-Id: Ie9b008bc51cc66f79503df89df793ba2f0f280b5",
        "cmtr": "Carlos Camacho",
        "date": "2016-09-15 16:30:13+02:00",
        "files": [
            "manifests/dispersion.pp",
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "b0620130994ce7a8b3141b7510150b1dd0237718",
        "msg": "Remove explicit requires on ceilometer class\n\nIn cases where ceilometer and proxy server are not running on\nthe same node this breaks things. Let the installers handle\nthe dependency based on where these services run.\n\nChange-Id: Ided6c1229178059a5e3ecc54442170b54ac7c421",
        "cmtr": "Pradeep Kilambi",
        "date": "2016-09-16 18:13:33-04:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "24a1556a5c05336c3d3bf2b39744c80652867dca",
        "msg": "Remove unnecesary spaces in log messages.\n\nSpaces added by mistake in some log messages.\n\nChange-Id: Ie65c17d3bed28fc79a65904c410e563d4e6f0c0d",
        "cmtr": "Carlos Camacho",
        "date": "2016-09-26 14:27:16+02:00",
        "files": [
            "manifests/keystone/auth.pp"]
      },
      {
        "hash": "fbbcd892358d47f5734adcefd5406146a6f33d0e",
        "msg": "Fixed swift::proxy::cache requirement on memcached\n\nFixed the incorrect inclusion of a requirement for the memcached class\nto be in the catalog for swift::proxy::cache due to a bad grep of\nthe memcached server list. The grep command will return an array of\nmatching values. Unfortunately this includes if nothing is found so the\nif condition was always matching. Now if you are not using a local\nmemcache server on 127.0.0.1, the memcached class is not required to\nbe in the catalog.\n\nChange-Id: I79b92dc67e46dfa0b62ba07b00633de6fb17bf1e\nCloses-Bug: #1628967",
        "cmtr": "Alex Schultz",
        "date": "2016-09-29 14:10:00-06:00",
        "files": [
            "manifests/proxy/cache.pp",
            "releasenotes/notes/fix-memcached-require-for-proxy-cache-cbb2726d22b53d80.yaml",
            "spec/classes/swift_proxy_cache_spec.rb"]
      },
      {
        "hash": "da39b47dafd791337dc1d5cc8cd339e8259ffc75",
        "msg": "proxy/ceilometer: deploy middleware before starting service\n\nIf we don't deploy the middleware before starting swift-proxy,\nswift-proxy might fail to start because it won't find the dependency.\n\nThis patch aims to make sure we first install\npython-ceilometermiddleware before trying to start swift-proxy.\n\nChange-Id: I3a04bba9de1ebc5e0fad40a43aa7b278f3597b17",
        "cmtr": "Emilien Macchi",
        "date": "2016-10-05 17:11:38-04:00",
        "files": [
            "manifests/proxy/ceilometer.pp"]
      },
      {
        "hash": "60ed2ee79cc9f15db2f86b1f255719f591853fac",
        "msg": "Replace proxy concat/template with ini provider\n\nMaintains full backward compatibility.\nUse swift_proxy_config ini provider to mange proxy-server.conf.\nRemove all erb templates. Move all template logic into proxy\nmiddleware classes. To purge proxy.conf of settings that are\nnot specified set the new paramater \"purge_config\" to \"true\".\n\nChange-Id: I0a143cf812043ea0f9a008a6e5c60ec87f9a4e9a",
        "cmtr": "Emilien Macchi",
        "date": "2016-10-06 10:29:04-04:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/proxy/account_quotas.pp",
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/bulk.pp",
            "manifests/proxy/cache.pp",
            "manifests/proxy/catch_errors.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/container_quotas.pp",
            "manifests/proxy/container_sync.pp",
            "manifests/proxy/copy.pp",
            "manifests/proxy/crossdomain.pp",
            "manifests/proxy/dlo.pp",
            "manifests/proxy/formpost.pp",
            "manifests/proxy/gatekeeper.pp",
            "manifests/proxy/healthcheck.pp",
            "manifests/proxy/keystone.pp",
            "manifests/proxy/proxy_logging.pp",
            "manifests/proxy/ratelimit.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/slo.pp",
            "manifests/proxy/staticweb.pp",
            "manifests/proxy/swauth.pp",
            "manifests/proxy/swift3.pp",
            "manifests/proxy/tempauth.pp",
            "manifests/proxy/tempauth_account.pp",
            "manifests/proxy/tempurl.pp",
            "manifests/proxy/versioned_writes.pp",
            "manifests/service.pp",
            "manifests/storage/filter/healthcheck.pp",
            "releasenotes/notes/proxy_template_to_ini-536250b1f409e40f.yaml",
            "spec/classes/swift_proxy_account_quotas_spec.rb",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_bulk_spec.rb",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_container_quotas_spec.rb",
            "spec/classes/swift_proxy_container_sync_spec.rb",
            "spec/classes/swift_proxy_copy_spec.rb",
            "spec/classes/swift_proxy_crossdomain_spec.rb",
            "spec/classes/swift_proxy_dlo_spec.rb",
            "spec/classes/swift_proxy_formpost_spec.rb",
            "spec/classes/swift_proxy_gatekeeper_spec.rb",
            "spec/classes/swift_proxy_healthcheck_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_ratelimit_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "spec/classes/swift_proxy_slo_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_proxy_staticweb_spec.rb",
            "spec/classes/swift_proxy_swauth_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempauth_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb",
            "spec/classes/swift_proxy_versioned_writes_spec.rb",
            "spec/defines/swift_proxy_tempauth_account.rb",
            "templates/healthcheck.conf.erb",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None",
            "None"]
      },
      {
        "hash": "f8d6c083343cd308da1fc68113b22664d276d011",
        "msg": "Set concurrency to 1 for auditor/replicator/updater\n\nBefore this the default concurrency was set to $::processorcount, and\nthis resulted in environments where 24 auditors/replicators/reapers\nprocesses were all using the same disk. This results in a high I/O load,\nbecause every thread blocks the others.\n\nThese values are 1 by default in Swift. If one has many disks and a\npowerful machine, a single-digit concurrency for auditors and\nreplicators might work fine; the reaper is most likely only running with\na concurrency of 1 in any case.\n\nLet's set this to the default of 1; operators with a need to use a\nhigher value can easily override the defaults (and probably want to use\na value that is appropriate to their setup).\n\nCloses-Bug: 1631359\nChange-Id: I54a5d01e4bd357973e142274db79d119e9e46457",
        "cmtr": "Christian Schwede",
        "date": "2016-10-07 15:03:40+02:00",
        "files": [
            "manifests/storage/server.pp",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "213be0429a5a7de7e715b88577ce976753cbd15d",
        "msg": "Change worker defaults to ::os_workers\n\nThis patch changes the default worker count from ::processorcount to the\nnew ::os_workers fact. ::os_workers is based on the number of processors\n(currently cpu/4) but is capped at a maximum of 8 worker processors.\nThis is a much more reasonable default in general and prevents excessive\nresource consumption on systems with a large number of CPUs.\n\nChange-Id: Ifa4f425091fae81204df68dd536f364efd647e3d",
        "cmtr": "Maksym Yatsenko",
        "date": "2016-10-10 14:46:11+03:00",
        "files": [
            "manifests/proxy.pp",
            "releasenotes/notes/os_workers_for_worker_count-74ffbcb7c18c00e9.yaml",
            "spec/classes/swift_proxy_cache_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_ringbuilder_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/defines/swift_storage_server_spec.rb"]
      },
      {
        "hash": "af4c987615650a9ebb67826964614eddb9a2667d",
        "msg": "swift-concat requires swift-file dependency\n\nIn a case where /etc/swift/<type>-server/<config_files>\nis used, need to ensure that the directory is created\nbefore the concat resource attempts to write a config\nfile there.\n\nChange-Id: I3f62a2bcd65b429518327f43918871d4263d35fb",
        "cmtr": "Adam Vinsh",
        "date": "2016-10-14 16:04:39+00:00",
        "files": [
            "manifests/deps.pp",
            "manifests/storage/server.pp"]
      },
      {
        "hash": "4304c6e7bc71a69bc2e646ce2e0aa59c918aec76",
        "msg": "Move swift::client to include from declared class\n\nWe need to be able to include swift::client multiple times in a\ngiven catalog. In order to ensure that we get the value of\n$swift::client_package_ensure, we change it to be the default in\nswift::client\n\nChange-Id: I65fb0736e9fa9e68c3c7877cf6caf228c49eb82d\nRelated-bug: 1632143",
        "cmtr": "Andrew Woodward",
        "date": "2016-10-14 13:02:36-07:00",
        "files": [
            "manifests/client.pp",
            "manifests/init.pp"]
      },
      {
        "hash": "49a4be72777616f0b721c3779cf29f146311240d",
        "msg": "Add nonblocking_notify to Swift proxy ceilometer config\n\nThis allows to send Ceilometer notifications in a background thread, no\nlonger blocking Swift proxy if the RabbitMQ is not available.\n\nThis patch does not change the default behavior.\n\nChange-Id: Iad1f69f273fe80176c6010f8f3cc24313d7c5ab4",
        "cmtr": "Christian Schwede",
        "date": "2016-11-01 12:07:27+01:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "releasenotes/notes/non-blocking-ceilometermiddleware-3ed113824614016c.yaml",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "3fb02701f33dd7594851b13c5f68bcd527751a05",
        "msg": "Add reseller_admin_role config to proxy::keystone\n\nThe reseller admin role has the ability to create and delete accounts.\nSet the default as undef, so that new config is not added until\na user wants to add it.\n\nAlso clean up leftover concat items from proxy spec tests.\n\nChange-Id: I5936fe30b1cb7197bf37748f204a054b1e49e430",
        "cmtr": "Adam Vinsh",
        "date": "2016-11-03 09:34:14-06:00",
        "files": [
            "manifests/proxy/keystone.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_catch_errors_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_keystone_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_proxy_swift3_spec.rb",
            "spec/classes/swift_proxy_tempauth_spec.rb",
            "spec/classes/swift_proxy_tempurl_spec.rb"]
      },
      {
        "hash": "239a8e592cbda00ee1ea55606aedaa313c232713",
        "msg": "set url_base option in staticweb swift middleware\n\nthe url_base option was recently added upstream to resolve\nissue with SSL termination by haproxy.\n\nCloses-Bug: 1638632\n\nChange-Id: Icf45cf2aece398b836c87ddffde5d3056e96dc4d\nSigned-off-by: Thiago da Silva <thiago@redhat.com>",
        "cmtr": "Thiago da Silva",
        "date": "2016-11-04 10:49:20-04:00",
        "files": [
            "manifests/proxy/staticweb.pp",
            "spec/classes/swift_proxy_staticweb_spec.rb"]
      },
      {
        "hash": "eb2cb392951bd9a9ead9ae2ffe8b00d0e792616e",
        "msg": "Fix common options position in params.pp\n\nThese parameters are common for both systems,\nthey could be moved out from 'case'.\n\nChange-Id: I05147412a153c6a1b20458d9336666c1ee254541",
        "cmtr": "ZhongShengping",
        "date": "2016-11-08 11:33:06+08:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "26e6da96bdeb15b11d20aeba6a5d7bb2725fb45f",
        "msg": "Remove trailing whitespace\n\nIn favor of upgrading to lint 2.0.2\n\n2016-11-07 12:27:47.002216 | + /home/jenkins/workspace/gate-puppet-swift-puppet-lint/openstack-swift/.bundled_gems/bin/bundle exec rake lint\n2016-11-07 12:27:52.905339 | manifests/proxy/tempauth.pp:126:ERROR: trailing whitespace found\n\nChange-Id: I2bc31111719b4755afe3d7acfc4e6ab17c3a7598",
        "cmtr": "Carlos Camacho",
        "date": "2016-11-08 16:08:13+01:00",
        "files": [
            "manifests/proxy/tempauth.pp"]
      },
      {
        "hash": "9d22a27038c84dfb2a357ebc2b67c637cd69d6c2",
        "msg": "Deprecate rabbitmq connection parameters\n\nThe rabbitmq connection parameters have been deprecated in favor of a\ntransport url setting.\n\nChange-Id: I6aa29f7a70c4c1bfce8a09d8da5f88bb148d7d49\nRelated-Bug: #1625198",
        "cmtr": "Alex Schultz",
        "date": "2016-11-08 17:16:21-07:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "releasenotes/notes/rabbit-connection-params-deprecation-0ac64b83c83ee58f.yaml",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "1b8869e6ae1085588d8b2b3a893f5587ec6ea255",
        "msg": "Pass subscribe and require into service resource\n\nBefore this update, subscribe and require could be passed\ninto the service class and work due to some default puppet\nbehaviors. This resulted in unknown variable warnings.  Removal\nof these parameters would remove the required resource dependencies.\n\nAdding new parameters 'service_subscribe' and 'service_require'\nto pass in these dependencies. The 'service_' prefix is used\nhere because use of 'subscribe' or 'require' as parameter names\nwould also print a meta parameter warning.\n\nChange-Id: I33d2d6028347bbe50dc9b3f36b3f86b217db7c0c",
        "cmtr": "Adam Vinsh",
        "date": "2016-11-21 23:35:23+00:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/service.pp",
            "manifests/storage/account.pp",
            "manifests/storage/container.pp",
            "manifests/storage/generic.pp",
            "manifests/storage/object.pp"]
      },
      {
        "hash": "63688a14e57282ae97072b406c81d0da2f61965c",
        "msg": "Add support for swift storage policies\n\nThis change implements storage policies as defined by swift:\nhttp://docs.openstack.org/developer/swift/overview_policies.html\n\nThere are two primary areas of change in this review\n- Add storage policy support to the ringbuilder and ring devices, along with\n  associated spec tests.\n- Adding storage policy support and enforcing rules in swift.conf using the\n  swift_storage_policy type and provider. Also: updated spec tests and an\n  update to swift acceptance test to use storage policies to configure an\n  additional 3 replica based ring.\n\nSee release notes and the README update for more details/instructions.\n\nChange-Id: I2b8db751790704df3f1027a14f61e231591537f3",
        "cmtr": "Adam Vinsh",
        "date": "2016-11-22 16:17:52+00:00",
        "files": [
            "README.md",
            "lib/puppet/provider/ring_account_device/swift_ring_builder.rb",
            "lib/puppet/provider/ring_container_device/swift_ring_builder.rb",
            "lib/puppet/provider/ring_object_device/swift_ring_builder.rb",
            "lib/puppet/provider/swift_ring_builder.rb",
            "lib/puppet/provider/swift_storage_policy/ruby.rb",
            "lib/puppet/type/ring_account_device.rb",
            "lib/puppet/type/ring_container_device.rb",
            "lib/puppet/type/ring_object_device.rb",
            "lib/puppet/type/swift_storage_policy.rb",
            "manifests/deps.pp",
            "manifests/ringbuilder/policy_ring.pp",
            "manifests/storage/node.pp",
            "manifests/storage/policy.pp",
            "releasenotes/notes/swift-storage-policies-5d20b2623ca87f84.yaml",
            "spec/acceptance/basic_swift_spec.rb",
            "spec/defines/swift_ringbuilder_policy_ring_spec.rb",
            "spec/defines/swift_storage_node_spec.rb",
            "spec/unit/puppet/provider/ring_account_device/swift_ring_builder_spec.rb",
            "spec/unit/puppet/provider/ring_container_device/swift_ring_builder_spec.rb",
            "spec/unit/puppet/provider/ring_object_device/swift_ring_builder_spec.rb",
            "spec/unit/puppet/provider/swift_storage_policy/ruby.rb",
            "spec/unit/puppet/type/ring_account_device_spec.rb",
            "spec/unit/puppet/type/ring_container_device_spec.rb",
            "spec/unit/puppet/type/ring_object_device_spec.rb",
            "spec/unit/puppet/type/swift_storage_policy.rb"]
      },
      {
        "hash": "83f105f5395a7259064a0ad5b43efb6309c6c2b2",
        "msg": "Secure amqp_url option\n\nAs amqp_url option contains password info,\nit should not keep plaintext in logs.\n\nChange-Id: I5061235d2ede23e5c80e06624298f8e39196b65b\nCloses-Bug: #1640809",
        "cmtr": "Xingchao Yu",
        "date": "2016-11-30 16:33:32+08:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "2ed840369b19aed0bd5d1c0bb04aca221c4a8c09",
        "msg": "Add swift::storage::loopbacks class\n\nThis patch adds a wrapper for the storage::loopback definition, making\nit possible to add multiple loopback devices using a Hiera hash.\n\nLoopback devices are the preferred method if there is only a single\nlocal disk with one partition, instead of just using a directory that is\ncreated on the root filesystem.\n\nThis patch is very similar to I3692b17988f8eacb7b8a7df1006a7fe24f587065.\n\nChange-Id: I11a230b7cf08a4cc2a144d9af0e6c81bb3827348",
        "cmtr": "Christian Schwede",
        "date": "2016-12-01 15:29:00+00:00",
        "files": [
            "manifests/storage/loopbacks.pp",
            "releasenotes/notes/swift-loopbacks-class-9b24b216099c7d98.yaml",
            "spec/classes/swift_storage_loopbacks_spec.rb"]
      },
      {
        "hash": "d4922bee39b6ebf33eafe170154943a37a9aba0f",
        "msg": "memcache_servers support in object-expirer and container-reconciler\n\nThis commit adds support for the memcache_servers option in\nobject-expirer and container-reconciler. Without this, both\ncurrently default to 127.0.0.1:11211.\n\nCloses-Bug: #1627927\nChange-Id: Ie139f018c4a742b014dd4d682970e154d66a8c6d",
        "cmtr": "Marcus Furlong",
        "date": "2016-12-05 15:30:35+11:00",
        "files": [
            "lib/puppet/provider/swift_container_reconciler_config/ini_setting.rb",
            "lib/puppet/type/swift_container_reconciler_config.rb",
            "manifests/containerreconciler.pp",
            "manifests/objectexpirer.pp",
            "manifests/params.pp",
            "releasenotes/notes/memcache-servers-support-092ed535a0c26ae1.yaml",
            "spec/classes/swift_containerreconciler_spec.rb",
            "spec/classes/swift_objectexpirer_spec.rb"]
      },
      {
        "hash": "121615cc1f6f1794581e3f3bb609f955b36f5b8c",
        "msg": "Change storage worker default to ::os_workers\n\nThis patch changes the default worker count from 1 to the ::os_workers fact.\n::os_workers is based on the number of processors (currently cpu/4) but is\ncapped at a maximum of 8 worker processors.  This is a much more reasonable\ndefault in general and prevents excessive resource consumption on systems with\na large number of CPUs.\n\nThis is a follow up to Ifa4f425091fae81204df68dd536f364efd647e3d\n\nRelated-Bug: 1655070\nChange-Id: I29fd3d8930f32650549bfbf96478232075a7d0b9",
        "cmtr": "Christian Schwede",
        "date": "2017-01-11 10:31:49+01:00",
        "files": [
            "manifests/storage/server.pp"]
      },
      {
        "hash": "be6122e9365bf5842567980062a7a5a6341fd46c",
        "msg": "Enable SSL options for swift-proxy's ceilometermiddleware notifications\n\nThis enables the basic SSL options (enabling SSL and setting the\ncertificates) for the notifications emitted by the ceilometermiddleware\nthat's in front of swift-proxy. This was enabled for the rabbitmq and\nthe amqp drivers.\n\nChange-Id: If23d1f0d20264faaddc2e5ad54863483fa43ed41",
        "cmtr": "Juan Antonio Osorio Robles",
        "date": "2017-02-23 15:47:30+02:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "releasenotes/notes/Enable-SSL-options-for-ceilometermiddleware-notifications-bbd3b7cbb9ba0910.yaml",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "fb9e6dcecccb2593df917e81ea4ec6ac8e6892f0",
        "msg": "Replace references to swift.openstack.org\n\nThe policy of giving projects vanity domains stopped about 5 years ago.\nswift.openstack.org is a redirect to the canonical location -\ndocs.openstack.org/developer/swift. While we are not aiming to remove\nthe redirect any time in the forseeable future due to existing published\nlinks pointing to it, we should at the very least stop adding more of\nthose links to the world.\n\nChange-Id: Ia56ce22c65c1fac29a2d8fb367797a4d7929a9b4",
        "cmtr": "Monty Taylor",
        "date": "2017-03-08 09:50:24-06:00",
        "files": [
            "ext/swift.rb",
            "ext/swift_keystone_test.rb",
            "files/swift_tester.rb",
            "manifests/dispersion.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "templates/swift_keystone_test.erb"]
      },
      {
        "hash": "7bab8544ff8a03999234f240684ac987bf2a5e0d",
        "msg": "create swift user after installing ceilometer package\n\nWhen configuring ceilometer middleware in Swift, we need the ceilometer\npackage first to have the ceilometer user before trying to create the\nswift user because we add the swift user to the ceilometer group.\n\nChange-Id: I2be3f693f11a7c41b0c198cb24420e53b057f338",
        "cmtr": "Emilien Macchi",
        "date": "2017-03-11 02:53:20+00:00",
        "files": [
            "manifests/proxy/ceilometer.pp"]
      },
      {
        "hash": "2efc06140fda47211c0e5cc387505f60a5a0444f",
        "msg": "Issue warning when old Swift ports are used\n\nhttps://bugs.launchpad.net/swift/+bug/1521339 changed the default ports\nfrom 6000-6002 to 6200-6202 so as not to conflict with X or other\nservices. This patch is to prepare operators for the eventual change of\nthe default values.\n\nChange-Id: I84501747af7b3ab46c22f1d76adfe3c629144378",
        "cmtr": "Drew Fisher",
        "date": "2017-03-15 07:47:04-06:00",
        "files": [
            "manifests/storage/all.pp",
            "releasenotes/notes/swift-port-warning-0ac39e6905f977b5.yaml"]
      },
      {
        "hash": "c64538ef8387128226dedbb51cac6548570d84e3",
        "msg": "Fix raising an error on rebalance warnings\n\nIf the ring has been rebalanced recently, the next call to rebalance\nwill not rebalance again if the time passed is shorter than\nmin_part_time. swift-ring-builder returns an exit code of 1 in this\ncase, which is a warning, but not a hard error (errors will use an exit\ncode of 2).\n\nIt makes sense therefore to expect an exit code of 0 or 1 and only fail\nif it's different.\n\nCloses-Bug: 1677588\nChange-Id: I03dd075c590344a920099c57b6a7530f103e0ede",
        "cmtr": "Christian Schwede",
        "date": "2017-03-30 14:39:04+02:00",
        "files": [
            "manifests/ringbuilder/rebalance.pp",
            "releasenotes/notes/rebalance-exit-codes-ee79621190315a5a.yaml"]
      },
      {
        "hash": "1a22b511fd16f5e1d2eb8b833797c7590f558c64",
        "msg": "Use LOCAL2 consistently as default everywhere\n\nThe log facility was still set sometimes to LOCAL0 and LOCAL1, let's use\nLOCAL2 everywhere for consistency and being able to fix redirects.\n\nChange-Id: Ibaac93743877daef29901a87792ab9beafa1a490",
        "cmtr": "Thomas Herve",
        "date": "2017-04-25 22:07:15+02:00",
        "files": [
            "manifests/proxy.pp",
            "manifests/proxy/gatekeeper.pp",
            "releasenotes/notes/log-facility-81dd7fff80e5f2f1.yaml",
            "spec/classes/swift_proxy_gatekeeper_spec.rb",
            "spec/classes/swift_proxy_spec.rb"]
      },
      {
        "hash": "28cbb68958311c4bf153544e8439d3ae19c89740",
        "msg": "Add support for ignore_projects for ceilometer events\n\nSet the default to services tenant. Without this, ceilometer\ndb gets hammered with gnocchi swift events. Keystone creds\nare required so middleware can qwuery for id.\n\nThis support is added in https://review.openstack.org/#/c/464559/\n\nChange-Id: I5c0f4f1a2c7fe7eb39ea6441970e9ac0946a4ec1",
        "cmtr": "Pradeep Kilambi",
        "date": "2017-05-18 12:24:18+00:00",
        "files": [
            "manifests/proxy/ceilometer.pp",
            "releasenotes/notes/add-ignore-projects-b1ab3629320a39ed.yaml",
            "spec/classes/swift_proxy_ceilometer_spec.rb"]
      },
      {
        "hash": "af6fb24845b6f53a047efd1d9c2a80d42b3f8770",
        "msg": "Add missing Swift object reconstructor service\n\nAdding the object-reconstructor service and enabling it by default.\nThis is required for erasure coding.\n\nChange-Id: If388bcc1532d7db2132d4b206e13252a30fa9041",
        "cmtr": "Christian Schwede",
        "date": "2017-06-16 14:39:17+02:00",
        "files": [
            "manifests/params.pp",
            "manifests/storage/object.pp",
            "releasenotes/notes/swift-add-reconstructor-service-25dd7df5a7d25612.yaml",
            "spec/classes/swift_storage_object_spec.rb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "dede1d449473f99c4f929e555a3b65b974ebad4b",
        "msg": "Enable Swift containersync on Red Hat platform\n\nThe systemd service files have been merged (see [1]), thus we can enable\nthe containersync service now by default without a distribution check.\n\n[1] https://review.rdoproject.org/r/6172/ merged\n\nChange-Id: I6c1f953efe5df32160719ea1de2dd718f281cec0",
        "cmtr": "Christian Schwede",
        "date": "2017-06-16 15:50:31+02:00",
        "files": [
            "manifests/storage/container.pp",
            "releasenotes/notes/swift-containersync-service-f188d18796e7affe.yaml",
            "spec/classes/swift_storage_container_spec.rb"]
      },
      {
        "hash": "e8f765dcdeed737f2e1b8af1a17c7d6f19b244a0",
        "msg": "Tighten file permissions of dispersion.conf\n\nThe dispersion.conf contains a password, and should be readable only by\nthe swift user/group. The tool swift-dispersion-report also needs to\nread swift.conf, and that file has already a mode of 640 - thus it makes\nsense to use the same mode for this file.\n\nChange-Id: Ia6b3c807b3103983a2dd370aad95c709358f43cc",
        "cmtr": "Christian Schwede",
        "date": "2017-06-21 18:19:28+02:00",
        "files": [
            "manifests/dispersion.pp",
            "spec/classes/swift_dispersion_spec.rb"]
      },
      {
        "hash": "4ba33cdff2925e9dff9510ff2d4e1c9b5e505c4f",
        "msg": "Add Support of mounting devices by UUIDs\n\nIn currently, swift::storage::xfs will mount device by its file path,\nlike /dev/sda1. But the device file path will change when the computer\nreboots. This will lead Swift services fails to boot.\n\nThis patch introduces $device_type param to support mount disk by UUIDs.\n\nBy default, it will set to 'path' to keep compatiable.\n\nChange-Id: I1782c0b18a27203e90d27473d94fa16968c3f913",
        "cmtr": "Xingchao Yu",
        "date": "2017-07-10 23:06:53+08:00",
        "files": [
            "manifests/storage/xfs.pp",
            "releasenotes/notes/add-device-mount-type-support-2a5f1df26c2d1e68.yaml",
            "spec/defines/swift_storage_xfs_spec.rb"]
      },
      {
        "hash": "8380976e338783ab006ae9e0f95c5164833919fb",
        "msg": "Support to pass external args in parted command\n\nCurrently facter only support to fetch the partition's uuid,\nIf users want to mount device by uuid, then partitions should\nbe made in the disks.\n\nThis patch aims to add new param $ext_args in swift::storage::disk to\nenable passing making partitions arguments in parted command.\n\nChange-Id: I26dcfe73d2791a9033b555323847ddd211f02ceb",
        "cmtr": "Xingchao Yu",
        "date": "2017-07-14 11:33:43+08:00",
        "files": [
            "manifests/storage/disk.pp",
            "manifests/storage/xfs.pp",
            "releasenotes/notes/add-parted-external-command-c89bcce3b3ea54dc.yaml",
            "spec/defines/swift_storage_disk_spec.rb"]
      },
      {
        "hash": "86f435a2a56ddc13c361490a45309f11813a27ad",
        "msg": "Update URLs in documents according to document migration\n\nChange-Id: I1b8e63b37be6599a4263afdf12d8f617163fde20",
        "cmtr": "ZhongShengping",
        "date": "2017-07-14 13:05:37+08:00",
        "files": [
            "README.md",
            "ext/swift.rb",
            "ext/swift_keystone_test.rb",
            "files/swift_tester.rb",
            "manifests/dispersion.pp",
            "manifests/proxy/crossdomain.pp",
            "manifests/storage/disk.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/server.pp",
            "setup.cfg",
            "templates/swift_keystone_test.erb"]
      },
      {
        "hash": "8686642562ea86cd2f1457ab332ecaad02088130",
        "msg": "Update resource references for dependencies\n\nThe latest version of puppet now reports these as catalog failures so\nthis change removes the unnecessary references and the references\nshould be updated.\n\nChange-Id: I2001f8bb91ff70cf100140c7861606db459c2ad9\nCloses-Bug: #1702964\nCo-Authored-By: Alex Schultz <aschultz@redhat.com>",
        "cmtr": "Alex Schultz",
        "date": "2017-08-01 16:09:42-06:00",
        "files": [
            "manifests/init.pp",
            "manifests/keystone/dispersion.pp",
            "manifests/proxy/swauth.pp",
            "manifests/storage/ext4.pp",
            "manifests/storage/loopback.pp",
            "manifests/storage/mount.pp",
            "manifests/storage/object.pp",
            "manifests/storage/server.pp",
            "manifests/storage/xfs.pp",
            "spec/classes/swift_keystone_dispersion_spec.rb",
            "spec/classes/swift_proxy_spec.rb",
            "spec/classes/swift_storage_account_spec.rb",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/classes/swift_storage_container_spec.rb",
            "spec/classes/swift_storage_object_spec.rb",
            "spec/defines/swift_storage_mount_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "spec/defines/swift_storage_xfs_spec.rb"]
      },
      {
        "hash": "8fd65771101c263a9b4397a4cf9bdd8a14cb1467",
        "msg": "Add swift_proxy_config in swift::config\n\nThis patch aims to add the ability of configuring arbitrary options\nin swift-proxy.conf via swift::config.\n\nChange-Id: Id565326e8cf6368d061b1e3315b6e2ecbde3b059",
        "cmtr": "Xingchao Yu",
        "date": "2017-08-21 15:37:43+08:00",
        "files": [
            "manifests/config.pp",
            "spec/classes/swift_config_spec.rb"]
      },
      {
        "hash": "c90740b753c624bbbca1e1402bd7c0b03f269fcd",
        "msg": "Remove deprecated parameters for keystone::auth\n\nChange-Id: I5e27308082e69417d14a70a58cc8b738c1f94b3c",
        "cmtr": "ZhongShengping",
        "date": "2017-08-24 11:47:23+08:00",
        "files": [
            "manifests/keystone/auth.pp",
            "releasenotes/notes/remove_deprecated_parameters_auth-18a35f2387567df1.yaml",
            "spec/classes/swift_keystone_auth_spec.rb"]
      },
      {
        "hash": "41cf287439c42d913d9ec2a797648d57ed0b99da",
        "msg": "Expose account/container/object worker count\n\nExpose the account, container and object server worker count.\nThis allows operators to tune their settings depending on\ntheir needs. The current default is kept unchanged.\n\nChange-Id: I36c0b1004af1f59ee9adb9644a59e98a50665ef0",
        "cmtr": "Christian Schwede",
        "date": "2017-08-25 12:26:39+02:00",
        "files": [
            "manifests/storage/all.pp",
            "releasenotes/notes/expose-worker-count-07bde2c47a7c0329.yaml",
            "spec/classes/swift_storage_all_spec.rb"]
      },
      {
        "hash": "c85beff334d527245ca428e47e7411fcdb42937d",
        "msg": "Adding barbican configuration to swift\n\nAdding barbican configuration to Swift will\nallow enabling data-at-rest encryption in Swift.\n\nChange-Id: I78c6003f5f599a422193dc47422ee607ce05c715\nSigned-off-by: Thiago da Silva <thiago@redhat.com>",
        "cmtr": "Thiago da Silva",
        "date": "2018-02-07 12:03:19-05:00",
        "files": [
            "lib/puppet/provider/swift_keymaster_config/ini_setting.rb",
            "lib/puppet/type/swift_keymaster_config.rb",
            "manifests/keymaster.pp",
            "manifests/proxy/encryption.pp",
            "manifests/proxy/kms_keymaster.pp",
            "spec/classes/swift_keymaster.rb",
            "spec/classes/swift_proxy_encryption_spec.rb",
            "spec/classes/swift_proxy_kms_keymaster_spec.rb",
            "spec/unit/provider/swift_keymaster_config/ini_setting_spec.rb",
            "spec/unit/type/swift_keymaster_config_spec.rb"]
      },
      {
        "hash": "09139955cbe02e9e8a150da3909255f9c36c8721",
        "msg": "Debian is using python3-swiftclient\n\nChange-Id: I64f7fc1a2172f5f4a200a822eb4f617fde65db55",
        "cmtr": "zhubingbing",
        "date": "2018-04-12 11:36:09+08:00",
        "files": [
            "manifests/params.pp",
            "spec/classes/swift_client_spec.rb"]
      },
      {
        "hash": "25d88e982333eae079723198171fc06b615bf76b",
        "msg": "Set log_facility, log_level in obj expirer\n\nObject expirer does not have log_facility set explicitly\nand defaults to LOG_LOCAL0, thus logging to /var/log/messages\nAll other swift services have been set to LOG_LOCAL2. This\npatch changes object expirer to LOG_LOCAL2.\n\nChange-Id: I037090eecc9832e7c7397a5a9e52df4a23f6c16e\nSigned-off-by: Thiago da Silva <thiago@redhat.com>",
        "cmtr": "Thiago da Silva",
        "date": "2018-05-04 14:20:57-04:00",
        "files": [
            "manifests/objectexpirer.pp",
            "spec/classes/swift_objectexpirer_spec.rb"]
      },
      {
        "hash": "bb93e6a3755b39cb2408d299ee3015ebed819b20",
        "msg": "Update s3api configuration\n\nSwift has now merged the swift3 middleware into its own\nsource tree and renamed it to s3api.\n\nUse of auth_host, auth_port and auth_protocol\nconfiguration options was deprecated in the Newton release\nin favor of auth_uri\n\nRelated-Change-Id: I9c61d48e673d513cb4c5cf0c9f8b7d1b894729eb\nChange-Id: I7f085b0c05f2b8c50e7f94ca1c7f4670660da688\nSigned-off-by: Thiago da Silva <thiago@redhat.com>",
        "cmtr": "Thiago da Silva",
        "date": "2018-05-04 17:54:01-04:00",
        "files": [
            "manifests/proxy/s3api.pp",
            "manifests/proxy/s3token.pp",
            "manifests/proxy/swift3.pp",
            "releasenotes/notes/s3api-d3fe2afefaaa8e9d.yaml",
            "spec/classes/swift_proxy_s3api_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb"]
      },
      {
        "hash": "ca7070a567c4ec3f656fb9e653b5b53dbeb3a510",
        "msg": "Configure www_authenticate_uri instead of auth_uri in authtoken\n\nWe're configuring a piece of keystonemiddleware, which saw this\nchange:\n   https://review.openstack.org/508522\n\nThis minimal fix retains auth_uri wherever we were using it in\nPuppet, because who cares? It's just a name of a class field.\nBut when we write it out, change it to the new name in the\nconfiguration file, so these modules continue to work in the\nfuture.\n\nDepends-On: I7be3f7748a2857618dc4de38e09c7cccca6d2721\nChange-Id: I63f8a4287235c4659807530851c917a6386b4dd8",
        "cmtr": "Emilien Macchi",
        "date": "2018-05-16 19:14:47+00:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb"]
      },
      {
        "hash": "ecf9394d989fc7cfec7fe99ae39d9e906b6dbb55",
        "msg": "Replace port 35357 with 5000\n\nNow that the v2.0 API has been removed, we don't have a reason to\ninclude deployment instructions for two separate applications on\ndifferent ports.\n\nChange-Id: I518cc1e80f870122ecff450f792f6a16ca56a9a3",
        "cmtr": "zhulingjie",
        "date": "2018-05-29 11:48:08-04:00",
        "files": [
            "manifests/proxy/authtoken.pp",
            "manifests/proxy/ceilometer.pp",
            "manifests/proxy/s3token.pp",
            "spec/classes/swift_proxy_authtoken_spec.rb",
            "spec/classes/swift_proxy_ceilometer_spec.rb",
            "spec/classes/swift_proxy_s3token_spec.rb",
            "tests/site.pp"]
      },
      {
        "hash": "287f2113c9eeca5e52a7f794d7248c27f632d6a8",
        "msg": "Enable use of splice in object server\n\nUse splice() for zero-copy object GETs. This requires Linux kernel\nversion 3.0 or greater\n\nChange-Id: I0c25b0f99c7fabe5def4ab253c0164a88c250796",
        "cmtr": "Thiago da Silva",
        "date": "2018-07-09 08:49:04-04:00",
        "files": [
            "manifests/storage/all.pp",
            "manifests/storage/server.pp",
            "spec/classes/swift_storage_all_spec.rb",
            "spec/defines/swift_storage_server_spec.rb",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "19634d28a64ca53ab52a69033d5c060351c6f9b4",
        "msg": "Provide more useful fail message\n\nChange-Id: I2dee0a925eaf380ee7751e4953c1e803c3510a7a\nCloses-Bug: #1792719",
        "cmtr": "zhulingjie",
        "date": "2018-09-13 20:38:27-04:00",
        "files": [
            "manifests/params.pp"]
      },
      {
        "hash": "31dc95fd151e4cc770b61c7b1af4ec13f8e6096a",
        "msg": "Add servers_per_port parameter in object-server\n\nAccording to the doc at this URL:\nhttps://docs.openstack.org/swift/latest/deployment_guide.html\n\nfor performance reasons, it is desirable to use forks of the\nobject-server, each on a different port, one per device. This\nis what I'm doing in openstack-cluster-install in Debian. For\nthis, I've been using this patch. It'd be nice to have it\nupstream as well.\n\nChange-Id: I9224eb7022871e92cc18f82e9985d91d5e0c2823",
        "cmtr": "Thomas Goirand",
        "date": "2018-09-18 15:48:54+02:00",
        "files": [
            "manifests/storage/server.pp",
            "templates/object-server.conf.erb"]
      },
      {
        "hash": "db15378216a98a6f7d7ed56b75fc7615199f92db",
        "msg": "Limit number of default swift server workers\n\n'auto' defaults to the number of effective cpu cores and we should\ncap the default max number using os_workers fact, unless overridden.\n\nChange-Id: I59393a8d2d6aa13c386aea56da72b096ca672d4a",
        "cmtr": "rabi",
        "date": "2018-10-12 17:25:40+05:18",
        "files": [
            "manifests/storage/all.pp",
            "releasenotes/notes/cap-default-swift-server-workers-90b6206b37c6866b.yaml"]
      }]
    }
